{{- if and .Values.hookos.enabled (empty .Values.hookos.persistence.existingClaim ) }}
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ .Values.hookos.persistence.localPersistentVolume.storageClassName }}
  namespace: {{ .Release.Namespace }}
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.hookos.persistence.localPersistentVolume.name }}
  namespace: {{ .Release.Namespace }}
spec:
  capacity:
    storage: {{ .Values.hookos.persistence.localPersistentVolume.size }}
  accessModes:
  {{- range .Values.hookos.persistence.localPersistentVolume.accessModes }}
  - {{ . | quote }}
  {{- end }}
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ .Values.hookos.persistence.localPersistentVolume.storageClassName }}
  local:
    path: {{ .Values.hookos.persistence.localPersistentVolume.path }}
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: non-existent-label # this label with DoesNotExist should match all nodes
          operator: DoesNotExist
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hook-artifacts
  namespace: {{ .Release.Namespace }}
  labels:
    {{- with .Values.hookos.persistence.localPersistentVolume.extraLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  accessModes:
  {{- range .Values.hookos.persistence.localPersistentVolume.accessModes }}
  - {{ . | quote }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.hookos.persistence.localPersistentVolume.size | quote }}
  storageClassName: {{ .Values.hookos.persistence.localPersistentVolume.storageClassName }}
{{- end }}
