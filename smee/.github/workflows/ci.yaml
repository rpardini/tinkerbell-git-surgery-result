name: For each commit and PR
on:
  push:
  pull_request:

jobs:
  validation:
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Install nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: "v0.4.1"
      - name: Non Go formatters and linters
        run: ./.github/workflows/ci-non-go.sh
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.15.5"
      - name: goimports
        run: go get golang.org/x/tools/cmd/goimports && goimports -d . | (! grep .)
      - name: go vet
        run: go vet ./...
      - name: golangci-lint brought to you by Nix
        run: nix-shell --run 'GOROOT= golangci-lint run -v -D errcheck'
      - name: go test
        run: go test -v ./...
      - name: go test coverage
        run: go test -coverprofile=coverage.txt ./...
      - name: upload codecov
        run: bash <(curl -s https://codecov.io/bash)
      - name: compile binaries
        run: nix-shell --run 'make crosscompile'
      - name: Docker Image Tag for Sha
        id: docker-image-tag
        run: |
          echo ::set-output name=tags::quay.io/tinkerbell/boots:latest,quay.io/tinkerbell/boots:sha-${GITHUB_SHA::8}
      - name: Login to quay.io
        uses: docker/login-action@v1
        if: ${{ startsWith(github.ref, 'refs/heads/master') }}
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: quay.io/tinkerbell/boots
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          cache-from: type=registry,ref=quay.io/tinkerbell/boots:latest
          push: ${{ startsWith(github.ref, 'refs/heads/master') }}
          tags: ${{ steps.docker-image-tag.outputs.tags }}
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
