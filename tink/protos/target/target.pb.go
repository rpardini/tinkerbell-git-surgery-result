// Code generated by protoc-gen-go. DO NOT EDIT.
// source: target.proto

package target

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PushRequest struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRequest) Reset()         { *m = PushRequest{} }
func (m *PushRequest) String() string { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()    {}
func (*PushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_468528a86129e532, []int{0}
}

func (m *PushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRequest.Unmarshal(m, b)
}
func (m *PushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRequest.Marshal(b, m, deterministic)
}
func (m *PushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRequest.Merge(m, src)
}
func (m *PushRequest) XXX_Size() int {
	return xxx_messageInfo_PushRequest.Size(m)
}
func (m *PushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushRequest proto.InternalMessageInfo

func (m *PushRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type GetRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_468528a86129e532, []int{1}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type UpdateRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_468528a86129e532, []int{2}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpdateRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type UUID struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UUID) Reset()         { *m = UUID{} }
func (m *UUID) String() string { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()    {}
func (*UUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_468528a86129e532, []int{3}
}

func (m *UUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UUID.Unmarshal(m, b)
}
func (m *UUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UUID.Marshal(b, m, deterministic)
}
func (m *UUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UUID.Merge(m, src)
}
func (m *UUID) XXX_Size() int {
	return xxx_messageInfo_UUID.Size(m)
}
func (m *UUID) XXX_DiscardUnknown() {
	xxx_messageInfo_UUID.DiscardUnknown(m)
}

var xxx_messageInfo_UUID proto.InternalMessageInfo

func (m *UUID) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_468528a86129e532, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Targets struct {
	JSON                 string   `protobuf:"bytes,1,opt,name=JSON,proto3" json:"JSON,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Targets) Reset()         { *m = Targets{} }
func (m *Targets) String() string { return proto.CompactTextString(m) }
func (*Targets) ProtoMessage()    {}
func (*Targets) Descriptor() ([]byte, []int) {
	return fileDescriptor_468528a86129e532, []int{5}
}

func (m *Targets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Targets.Unmarshal(m, b)
}
func (m *Targets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Targets.Marshal(b, m, deterministic)
}
func (m *Targets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Targets.Merge(m, src)
}
func (m *Targets) XXX_Size() int {
	return xxx_messageInfo_Targets.Size(m)
}
func (m *Targets) XXX_DiscardUnknown() {
	xxx_messageInfo_Targets.DiscardUnknown(m)
}

var xxx_messageInfo_Targets proto.InternalMessageInfo

func (m *Targets) GetJSON() string {
	if m != nil {
		return m.JSON
	}
	return ""
}

type TargetList struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TargetList) Reset()         { *m = TargetList{} }
func (m *TargetList) String() string { return proto.CompactTextString(m) }
func (*TargetList) ProtoMessage()    {}
func (*TargetList) Descriptor() ([]byte, []int) {
	return fileDescriptor_468528a86129e532, []int{6}
}

func (m *TargetList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetList.Unmarshal(m, b)
}
func (m *TargetList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetList.Marshal(b, m, deterministic)
}
func (m *TargetList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetList.Merge(m, src)
}
func (m *TargetList) XXX_Size() int {
	return xxx_messageInfo_TargetList.Size(m)
}
func (m *TargetList) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetList.DiscardUnknown(m)
}

var xxx_messageInfo_TargetList proto.InternalMessageInfo

func (m *TargetList) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *TargetList) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*PushRequest)(nil), "target.PushRequest")
	proto.RegisterType((*GetRequest)(nil), "target.GetRequest")
	proto.RegisterType((*UpdateRequest)(nil), "target.UpdateRequest")
	proto.RegisterType((*UUID)(nil), "target.UUID")
	proto.RegisterType((*Empty)(nil), "target.Empty")
	proto.RegisterType((*Targets)(nil), "target.Targets")
	proto.RegisterType((*TargetList)(nil), "target.TargetList")
}

func init() { proto.RegisterFile("target.proto", fileDescriptor_468528a86129e532) }

var fileDescriptor_468528a86129e532 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x26, 0xa1, 0xa6, 0xf8, 0xb5, 0xd1, 0xb2, 0x22, 0xc8, 0xa2, 0xa0, 0x7b, 0xf2, 0x54, 0x6a,
	0x8a, 0xe0, 0x59, 0x23, 0x52, 0x11, 0x95, 0x6a, 0x1e, 0x60, 0x25, 0x8b, 0x16, 0x94, 0xc6, 0x64,
	0x72, 0xe8, 0x7b, 0xf8, 0xc0, 0xb2, 0xbb, 0x9d, 0x98, 0x88, 0x42, 0x6f, 0x93, 0xf9, 0xfe, 0x26,
	0x1f, 0x8b, 0x21, 0xe9, 0xf2, 0xd5, 0xd0, 0xb8, 0x28, 0x97, 0xb4, 0x14, 0x91, 0xff, 0x52, 0x27,
	0x18, 0x3c, 0xd6, 0xd5, 0xdb, 0xdc, 0x7c, 0xd6, 0xa6, 0x22, 0x21, 0xd0, 0xcb, 0x35, 0xe9, 0x83,
	0xe0, 0x38, 0x38, 0xdd, 0x9e, 0xbb, 0x59, 0x1d, 0x02, 0x37, 0x86, 0x98, 0xb1, 0x83, 0x70, 0x96,
	0xae, 0xf1, 0x70, 0x96, 0xaa, 0x29, 0xe2, 0xac, 0xc8, 0x35, 0x99, 0x7f, 0x08, 0x8d, 0x65, 0xd8,
	0xb2, 0x94, 0xe8, 0x65, 0x99, 0xc7, 0xea, 0x7a, 0x91, 0x73, 0x9c, 0x9d, 0x55, 0x1f, 0x5b, 0xd7,
	0x1f, 0x05, 0xad, 0xd4, 0x11, 0xfa, 0xcf, 0xee, 0xc8, 0xca, 0xf2, 0x6e, 0x9f, 0x1e, 0xee, 0x99,
	0x67, 0x67, 0x35, 0x01, 0x3c, 0x7c, 0xb7, 0xd8, 0x2c, 0x35, 0xf9, 0x0a, 0x11, 0x79, 0x89, 0x48,
	0x10, 0x5f, 0x95, 0x46, 0x93, 0xe1, 0x84, 0xbd, 0xf1, 0xba, 0x9e, 0x56, 0x1b, 0x72, 0xc8, 0x4b,
	0x77, 0xec, 0x19, 0x07, 0x5e, 0xae, 0x6c, 0x00, 0x63, 0x3f, 0xdd, 0xc8, 0x5d, 0xde, 0xb1, 0xeb,
	0x05, 0x46, 0xbe, 0x9c, 0x96, 0x70, 0xbf, 0x31, 0x6d, 0xd7, 0x26, 0x63, 0x5e, 0xbb, 0x9f, 0x17,
	0xe7, 0x18, 0xa5, 0xe6, 0xdd, 0x74, 0x94, 0x7f, 0x45, 0xfe, 0x92, 0x25, 0x18, 0xd8, 0x3a, 0x38,
	0xbf, 0x8b, 0x4a, 0xd1, 0xbd, 0xcf, 0x32, 0x27, 0xc1, 0x4b, 0xe4, 0x5e, 0xc4, 0xf4, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0xa2, 0x48, 0x19, 0xf8, 0x21, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TargetClient is the client API for Target service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TargetClient interface {
	CreateTargets(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*UUID, error)
	TargetByID(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Targets, error)
	UpdateTargetByID(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Empty, error)
	DeleteTargetByID(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Empty, error)
	ListTargets(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Target_ListTargetsClient, error)
}

type targetClient struct {
	cc *grpc.ClientConn
}

func NewTargetClient(cc *grpc.ClientConn) TargetClient {
	return &targetClient{cc}
}

func (c *targetClient) CreateTargets(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*UUID, error) {
	out := new(UUID)
	err := c.cc.Invoke(ctx, "/target.Target/CreateTargets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetClient) TargetByID(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Targets, error) {
	out := new(Targets)
	err := c.cc.Invoke(ctx, "/target.Target/TargetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetClient) UpdateTargetByID(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/target.Target/UpdateTargetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetClient) DeleteTargetByID(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/target.Target/DeleteTargetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetClient) ListTargets(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Target_ListTargetsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Target_serviceDesc.Streams[0], "/target.Target/ListTargets", opts...)
	if err != nil {
		return nil, err
	}
	x := &targetListTargetsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Target_ListTargetsClient interface {
	Recv() (*TargetList, error)
	grpc.ClientStream
}

type targetListTargetsClient struct {
	grpc.ClientStream
}

func (x *targetListTargetsClient) Recv() (*TargetList, error) {
	m := new(TargetList)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TargetServer is the server API for Target service.
type TargetServer interface {
	CreateTargets(context.Context, *PushRequest) (*UUID, error)
	TargetByID(context.Context, *GetRequest) (*Targets, error)
	UpdateTargetByID(context.Context, *UpdateRequest) (*Empty, error)
	DeleteTargetByID(context.Context, *GetRequest) (*Empty, error)
	ListTargets(*Empty, Target_ListTargetsServer) error
}

// UnimplementedTargetServer can be embedded to have forward compatible implementations.
type UnimplementedTargetServer struct {
}

func (*UnimplementedTargetServer) CreateTargets(ctx context.Context, req *PushRequest) (*UUID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTargets not implemented")
}
func (*UnimplementedTargetServer) TargetByID(ctx context.Context, req *GetRequest) (*Targets, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TargetByID not implemented")
}
func (*UnimplementedTargetServer) UpdateTargetByID(ctx context.Context, req *UpdateRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTargetByID not implemented")
}
func (*UnimplementedTargetServer) DeleteTargetByID(ctx context.Context, req *GetRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTargetByID not implemented")
}
func (*UnimplementedTargetServer) ListTargets(req *Empty, srv Target_ListTargetsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListTargets not implemented")
}

func RegisterTargetServer(s *grpc.Server, srv TargetServer) {
	s.RegisterService(&_Target_serviceDesc, srv)
}

func _Target_CreateTargets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetServer).CreateTargets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/target.Target/CreateTargets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetServer).CreateTargets(ctx, req.(*PushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Target_TargetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetServer).TargetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/target.Target/TargetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetServer).TargetByID(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Target_UpdateTargetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetServer).UpdateTargetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/target.Target/UpdateTargetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetServer).UpdateTargetByID(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Target_DeleteTargetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetServer).DeleteTargetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/target.Target/DeleteTargetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetServer).DeleteTargetByID(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Target_ListTargets_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TargetServer).ListTargets(m, &targetListTargetsServer{stream})
}

type Target_ListTargetsServer interface {
	Send(*TargetList) error
	grpc.ServerStream
}

type targetListTargetsServer struct {
	grpc.ServerStream
}

func (x *targetListTargetsServer) Send(m *TargetList) error {
	return x.ServerStream.SendMsg(m)
}

var _Target_serviceDesc = grpc.ServiceDesc{
	ServiceName: "target.Target",
	HandlerType: (*TargetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTargets",
			Handler:    _Target_CreateTargets_Handler,
		},
		{
			MethodName: "TargetByID",
			Handler:    _Target_TargetByID_Handler,
		},
		{
			MethodName: "UpdateTargetByID",
			Handler:    _Target_UpdateTargetByID_Handler,
		},
		{
			MethodName: "DeleteTargetByID",
			Handler:    _Target_DeleteTargetByID_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListTargets",
			Handler:       _Target_ListTargets_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "target.proto",
}
