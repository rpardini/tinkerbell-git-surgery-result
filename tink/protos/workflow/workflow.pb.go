// Code generated by protoc-gen-go. DO NOT EDIT.
// source: workflow.proto

package workflow

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type State int32

const (
	State_PENDING State = 0
	State_RUNNING State = 1
	State_FAILED  State = 2
	State_TIMEOUT State = 3
	State_SUCCESS State = 4
)

var State_name = map[int32]string{
	0: "PENDING",
	1: "RUNNING",
	2: "FAILED",
	3: "TIMEOUT",
	4: "SUCCESS",
}

var State_value = map[string]int32{
	"PENDING": 0,
	"RUNNING": 1,
	"FAILED":  2,
	"TIMEOUT": 3,
	"SUCCESS": 4,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{0}
}

type ActionState int32

const (
	ActionState_ACTION_PENDING     ActionState = 0
	ActionState_ACTION_IN_PROGRESS ActionState = 1
	ActionState_ACTION_SUCCESS     ActionState = 2
	ActionState_ACTION_FAILED      ActionState = 3
	ActionState_ACTION_TIMEOUT     ActionState = 4
)

var ActionState_name = map[int32]string{
	0: "ACTION_PENDING",
	1: "ACTION_IN_PROGRESS",
	2: "ACTION_SUCCESS",
	3: "ACTION_FAILED",
	4: "ACTION_TIMEOUT",
}

var ActionState_value = map[string]int32{
	"ACTION_PENDING":     0,
	"ACTION_IN_PROGRESS": 1,
	"ACTION_SUCCESS":     2,
	"ACTION_FAILED":      3,
	"ACTION_TIMEOUT":     4,
}

func (x ActionState) String() string {
	return proto.EnumName(ActionState_name, int32(x))
}

func (ActionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{1}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Workflow struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Template             string               `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Target               string               `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	State                State                `protobuf:"varint,4,opt,name=state,proto3,enum=github.com.packethost.rover.protos.workflow.State" json:"state,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Data                 string               `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{1}
}

func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (m *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(m, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Workflow) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *Workflow) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Workflow) GetState() State {
	if m != nil {
		return m.State
	}
	return State_PENDING
}

func (m *Workflow) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Workflow) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Workflow) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *Workflow) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type CreateRequest struct {
	Template             string   `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{2}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *CreateRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type CreateResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{3}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{4}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type WorkflowContext struct {
	WorkflowId           string      `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	CurrentWorker        string      `protobuf:"bytes,2,opt,name=current_worker,json=currentWorker,proto3" json:"current_worker,omitempty"`
	CurrentTask          string      `protobuf:"bytes,3,opt,name=current_task,json=currentTask,proto3" json:"current_task,omitempty"`
	CurrentAction        string      `protobuf:"bytes,4,opt,name=current_action,json=currentAction,proto3" json:"current_action,omitempty"`
	CurrentActionIndex   int64       `protobuf:"varint,5,opt,name=current_action_index,json=currentActionIndex,proto3" json:"current_action_index,omitempty"`
	CurrentActionState   ActionState `protobuf:"varint,6,opt,name=current_action_state,json=currentActionState,proto3,enum=github.com.packethost.rover.protos.workflow.ActionState" json:"current_action_state,omitempty"`
	TotalNumberOfActions int64       `protobuf:"varint,7,opt,name=total_number_of_actions,json=totalNumberOfActions,proto3" json:"total_number_of_actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WorkflowContext) Reset()         { *m = WorkflowContext{} }
func (m *WorkflowContext) String() string { return proto.CompactTextString(m) }
func (*WorkflowContext) ProtoMessage()    {}
func (*WorkflowContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{5}
}

func (m *WorkflowContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowContext.Unmarshal(m, b)
}
func (m *WorkflowContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowContext.Marshal(b, m, deterministic)
}
func (m *WorkflowContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowContext.Merge(m, src)
}
func (m *WorkflowContext) XXX_Size() int {
	return xxx_messageInfo_WorkflowContext.Size(m)
}
func (m *WorkflowContext) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowContext.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowContext proto.InternalMessageInfo

func (m *WorkflowContext) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *WorkflowContext) GetCurrentWorker() string {
	if m != nil {
		return m.CurrentWorker
	}
	return ""
}

func (m *WorkflowContext) GetCurrentTask() string {
	if m != nil {
		return m.CurrentTask
	}
	return ""
}

func (m *WorkflowContext) GetCurrentAction() string {
	if m != nil {
		return m.CurrentAction
	}
	return ""
}

func (m *WorkflowContext) GetCurrentActionIndex() int64 {
	if m != nil {
		return m.CurrentActionIndex
	}
	return 0
}

func (m *WorkflowContext) GetCurrentActionState() ActionState {
	if m != nil {
		return m.CurrentActionState
	}
	return ActionState_ACTION_PENDING
}

func (m *WorkflowContext) GetTotalNumberOfActions() int64 {
	if m != nil {
		return m.TotalNumberOfActions
	}
	return 0
}

type WorkflowActionStatus struct {
	WorkflowId           string               `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TaskName             string               `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	ActionName           string               `protobuf:"bytes,3,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	ActionStatus         ActionState          `protobuf:"varint,4,opt,name=action_status,json=actionStatus,proto3,enum=github.com.packethost.rover.protos.workflow.ActionState" json:"action_status,omitempty"`
	Seconds              int64                `protobuf:"varint,5,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Message              string               `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	WorkerId             string               `protobuf:"bytes,8,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WorkflowActionStatus) Reset()         { *m = WorkflowActionStatus{} }
func (m *WorkflowActionStatus) String() string { return proto.CompactTextString(m) }
func (*WorkflowActionStatus) ProtoMessage()    {}
func (*WorkflowActionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{6}
}

func (m *WorkflowActionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowActionStatus.Unmarshal(m, b)
}
func (m *WorkflowActionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowActionStatus.Marshal(b, m, deterministic)
}
func (m *WorkflowActionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowActionStatus.Merge(m, src)
}
func (m *WorkflowActionStatus) XXX_Size() int {
	return xxx_messageInfo_WorkflowActionStatus.Size(m)
}
func (m *WorkflowActionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowActionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowActionStatus proto.InternalMessageInfo

func (m *WorkflowActionStatus) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *WorkflowActionStatus) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *WorkflowActionStatus) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *WorkflowActionStatus) GetActionStatus() ActionState {
	if m != nil {
		return m.ActionStatus
	}
	return ActionState_ACTION_PENDING
}

func (m *WorkflowActionStatus) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *WorkflowActionStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *WorkflowActionStatus) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *WorkflowActionStatus) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type WorkflowContextRequest struct {
	WorkerId             string   `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowContextRequest) Reset()         { *m = WorkflowContextRequest{} }
func (m *WorkflowContextRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowContextRequest) ProtoMessage()    {}
func (*WorkflowContextRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{7}
}

func (m *WorkflowContextRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowContextRequest.Unmarshal(m, b)
}
func (m *WorkflowContextRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowContextRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowContextRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowContextRequest.Merge(m, src)
}
func (m *WorkflowContextRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowContextRequest.Size(m)
}
func (m *WorkflowContextRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowContextRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowContextRequest proto.InternalMessageInfo

func (m *WorkflowContextRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type WorkflowContextList struct {
	WorkflowContexts     []*WorkflowContext `protobuf:"bytes,1,rep,name=workflow_contexts,json=workflowContexts,proto3" json:"workflow_contexts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WorkflowContextList) Reset()         { *m = WorkflowContextList{} }
func (m *WorkflowContextList) String() string { return proto.CompactTextString(m) }
func (*WorkflowContextList) ProtoMessage()    {}
func (*WorkflowContextList) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{8}
}

func (m *WorkflowContextList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowContextList.Unmarshal(m, b)
}
func (m *WorkflowContextList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowContextList.Marshal(b, m, deterministic)
}
func (m *WorkflowContextList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowContextList.Merge(m, src)
}
func (m *WorkflowContextList) XXX_Size() int {
	return xxx_messageInfo_WorkflowContextList.Size(m)
}
func (m *WorkflowContextList) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowContextList.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowContextList proto.InternalMessageInfo

func (m *WorkflowContextList) GetWorkflowContexts() []*WorkflowContext {
	if m != nil {
		return m.WorkflowContexts
	}
	return nil
}

type WorkflowActionsRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowActionsRequest) Reset()         { *m = WorkflowActionsRequest{} }
func (m *WorkflowActionsRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowActionsRequest) ProtoMessage()    {}
func (*WorkflowActionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{9}
}

func (m *WorkflowActionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowActionsRequest.Unmarshal(m, b)
}
func (m *WorkflowActionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowActionsRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowActionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowActionsRequest.Merge(m, src)
}
func (m *WorkflowActionsRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowActionsRequest.Size(m)
}
func (m *WorkflowActionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowActionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowActionsRequest proto.InternalMessageInfo

func (m *WorkflowActionsRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type WorkflowAction struct {
	TaskName             string   `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Timeout              int64    `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Command              string   `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	OnTimeout            string   `protobuf:"bytes,6,opt,name=on_timeout,json=onTimeout,proto3" json:"on_timeout,omitempty"`
	OnFailure            string   `protobuf:"bytes,7,opt,name=on_failure,json=onFailure,proto3" json:"on_failure,omitempty"`
	WorkerId             string   `protobuf:"bytes,8,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowAction) Reset()         { *m = WorkflowAction{} }
func (m *WorkflowAction) String() string { return proto.CompactTextString(m) }
func (*WorkflowAction) ProtoMessage()    {}
func (*WorkflowAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{10}
}

func (m *WorkflowAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowAction.Unmarshal(m, b)
}
func (m *WorkflowAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowAction.Marshal(b, m, deterministic)
}
func (m *WorkflowAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowAction.Merge(m, src)
}
func (m *WorkflowAction) XXX_Size() int {
	return xxx_messageInfo_WorkflowAction.Size(m)
}
func (m *WorkflowAction) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowAction.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowAction proto.InternalMessageInfo

func (m *WorkflowAction) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *WorkflowAction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowAction) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *WorkflowAction) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *WorkflowAction) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *WorkflowAction) GetOnTimeout() string {
	if m != nil {
		return m.OnTimeout
	}
	return ""
}

func (m *WorkflowAction) GetOnFailure() string {
	if m != nil {
		return m.OnFailure
	}
	return ""
}

func (m *WorkflowAction) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type WorkflowActionList struct {
	ActionList           []*WorkflowAction `protobuf:"bytes,1,rep,name=action_list,json=actionList,proto3" json:"action_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WorkflowActionList) Reset()         { *m = WorkflowActionList{} }
func (m *WorkflowActionList) String() string { return proto.CompactTextString(m) }
func (*WorkflowActionList) ProtoMessage()    {}
func (*WorkflowActionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{11}
}

func (m *WorkflowActionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowActionList.Unmarshal(m, b)
}
func (m *WorkflowActionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowActionList.Marshal(b, m, deterministic)
}
func (m *WorkflowActionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowActionList.Merge(m, src)
}
func (m *WorkflowActionList) XXX_Size() int {
	return xxx_messageInfo_WorkflowActionList.Size(m)
}
func (m *WorkflowActionList) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowActionList.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowActionList proto.InternalMessageInfo

func (m *WorkflowActionList) GetActionList() []*WorkflowAction {
	if m != nil {
		return m.ActionList
	}
	return nil
}

type GetWorkflowDataRequest struct {
	WorkflowID           string   `protobuf:"bytes,1,opt,name=workflow_iD,json=workflowID,proto3" json:"workflow_iD,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowDataRequest) Reset()         { *m = GetWorkflowDataRequest{} }
func (m *GetWorkflowDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowDataRequest) ProtoMessage()    {}
func (*GetWorkflowDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{12}
}

func (m *GetWorkflowDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowDataRequest.Unmarshal(m, b)
}
func (m *GetWorkflowDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowDataRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkflowDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowDataRequest.Merge(m, src)
}
func (m *GetWorkflowDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowDataRequest.Size(m)
}
func (m *GetWorkflowDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowDataRequest proto.InternalMessageInfo

func (m *GetWorkflowDataRequest) GetWorkflowID() string {
	if m != nil {
		return m.WorkflowID
	}
	return ""
}

func (m *GetWorkflowDataRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type GetWorkflowDataResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowDataResponse) Reset()         { *m = GetWorkflowDataResponse{} }
func (m *GetWorkflowDataResponse) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowDataResponse) ProtoMessage()    {}
func (*GetWorkflowDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{13}
}

func (m *GetWorkflowDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowDataResponse.Unmarshal(m, b)
}
func (m *GetWorkflowDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowDataResponse.Marshal(b, m, deterministic)
}
func (m *GetWorkflowDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowDataResponse.Merge(m, src)
}
func (m *GetWorkflowDataResponse) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowDataResponse.Size(m)
}
func (m *GetWorkflowDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowDataResponse proto.InternalMessageInfo

func (m *GetWorkflowDataResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateWorkflowDataRequest struct {
	WorkflowID           string   `protobuf:"bytes,1,opt,name=workflow_iD,json=workflowID,proto3" json:"workflow_iD,omitempty"`
	Metadata             []byte   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWorkflowDataRequest) Reset()         { *m = UpdateWorkflowDataRequest{} }
func (m *UpdateWorkflowDataRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkflowDataRequest) ProtoMessage()    {}
func (*UpdateWorkflowDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{14}
}

func (m *UpdateWorkflowDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkflowDataRequest.Unmarshal(m, b)
}
func (m *UpdateWorkflowDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkflowDataRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWorkflowDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkflowDataRequest.Merge(m, src)
}
func (m *UpdateWorkflowDataRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkflowDataRequest.Size(m)
}
func (m *UpdateWorkflowDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkflowDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkflowDataRequest proto.InternalMessageInfo

func (m *UpdateWorkflowDataRequest) GetWorkflowID() string {
	if m != nil {
		return m.WorkflowID
	}
	return ""
}

func (m *UpdateWorkflowDataRequest) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *UpdateWorkflowDataRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("github.com.packethost.rover.protos.workflow.State", State_name, State_value)
	proto.RegisterEnum("github.com.packethost.rover.protos.workflow.ActionState", ActionState_name, ActionState_value)
	proto.RegisterType((*Empty)(nil), "github.com.packethost.rover.protos.workflow.Empty")
	proto.RegisterType((*Workflow)(nil), "github.com.packethost.rover.protos.workflow.Workflow")
	proto.RegisterType((*CreateRequest)(nil), "github.com.packethost.rover.protos.workflow.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "github.com.packethost.rover.protos.workflow.CreateResponse")
	proto.RegisterType((*GetRequest)(nil), "github.com.packethost.rover.protos.workflow.GetRequest")
	proto.RegisterType((*WorkflowContext)(nil), "github.com.packethost.rover.protos.workflow.WorkflowContext")
	proto.RegisterType((*WorkflowActionStatus)(nil), "github.com.packethost.rover.protos.workflow.WorkflowActionStatus")
	proto.RegisterType((*WorkflowContextRequest)(nil), "github.com.packethost.rover.protos.workflow.WorkflowContextRequest")
	proto.RegisterType((*WorkflowContextList)(nil), "github.com.packethost.rover.protos.workflow.WorkflowContextList")
	proto.RegisterType((*WorkflowActionsRequest)(nil), "github.com.packethost.rover.protos.workflow.WorkflowActionsRequest")
	proto.RegisterType((*WorkflowAction)(nil), "github.com.packethost.rover.protos.workflow.WorkflowAction")
	proto.RegisterType((*WorkflowActionList)(nil), "github.com.packethost.rover.protos.workflow.WorkflowActionList")
	proto.RegisterType((*GetWorkflowDataRequest)(nil), "github.com.packethost.rover.protos.workflow.GetWorkflowDataRequest")
	proto.RegisterType((*GetWorkflowDataResponse)(nil), "github.com.packethost.rover.protos.workflow.GetWorkflowDataResponse")
	proto.RegisterType((*UpdateWorkflowDataRequest)(nil), "github.com.packethost.rover.protos.workflow.UpdateWorkflowDataRequest")
}

func init() { proto.RegisterFile("workflow.proto", fileDescriptor_892c7f566756b0be) }

var fileDescriptor_892c7f566756b0be = []byte{
	// 1116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xcf, 0x9d, 0xf3, 0xc7, 0x1e, 0x27, 0x6e, 0xba, 0x8d, 0x52, 0xe3, 0x82, 0x1a, 0x4e, 0x42,
	0x8a, 0x8a, 0xb8, 0x46, 0x41, 0x11, 0x85, 0x22, 0x41, 0xb0, 0x9d, 0x60, 0xa9, 0x38, 0xd5, 0xd9,
	0x51, 0x25, 0x04, 0xb2, 0x36, 0xbe, 0x8d, 0x73, 0xd8, 0x77, 0x6b, 0x6e, 0xf7, 0x92, 0x22, 0x51,
	0x89, 0x57, 0x84, 0x78, 0xe1, 0x19, 0xf1, 0x51, 0xf8, 0x20, 0xbc, 0xf0, 0xc6, 0x67, 0xe0, 0x11,
	0xed, 0x3f, 0xfb, 0xce, 0x6e, 0x89, 0x7c, 0x7e, 0xbb, 0x99, 0x9d, 0xdf, 0xec, 0xdc, 0xef, 0x37,
	0xbb, 0xb3, 0x50, 0xb9, 0xa1, 0xf1, 0xf0, 0x72, 0x44, 0x6f, 0xdc, 0x71, 0x4c, 0x39, 0x45, 0xef,
	0x0f, 0x02, 0x7e, 0x95, 0x5c, 0xb8, 0x7d, 0x1a, 0xba, 0x63, 0xdc, 0x1f, 0x12, 0x7e, 0x45, 0x19,
	0x77, 0x63, 0x7a, 0x4d, 0x62, 0x15, 0xc2, 0x5c, 0x03, 0xa9, 0x3d, 0x1c, 0x50, 0x3a, 0x18, 0x91,
	0xc7, 0xd2, 0x7f, 0x91, 0x5c, 0x3e, 0xe6, 0x41, 0x48, 0x18, 0xc7, 0xe1, 0x58, 0x85, 0x3a, 0x1b,
	0xb0, 0xd6, 0x0c, 0xc7, 0xfc, 0x07, 0xe7, 0x2f, 0x1b, 0x8a, 0x2f, 0x34, 0x0c, 0x55, 0xc0, 0x0e,
	0xfc, 0xaa, 0xb5, 0x67, 0xed, 0x97, 0x3c, 0x3b, 0xf0, 0x51, 0x0d, 0x8a, 0x9c, 0x84, 0xe3, 0x11,
	0xe6, 0xa4, 0x6a, 0x4b, 0xef, 0xc4, 0x46, 0xbb, 0xb0, 0xce, 0x71, 0x3c, 0x20, 0xbc, 0x5a, 0x90,
	0x2b, 0xda, 0x42, 0x5f, 0xc2, 0x1a, 0xe3, 0x02, 0xb0, 0xba, 0x67, 0xed, 0x57, 0x0e, 0x0f, 0xdd,
	0x05, 0xea, 0x76, 0x3b, 0x02, 0xe9, 0xa9, 0x04, 0xe8, 0x09, 0x94, 0xfa, 0x31, 0xc1, 0x9c, 0xf8,
	0xc7, 0xbc, 0xba, 0xb6, 0x67, 0xed, 0x97, 0x0f, 0x6b, 0xae, 0xfa, 0x31, 0xd7, 0xfc, 0x98, 0xdb,
	0x35, 0x3f, 0xe6, 0x4d, 0x83, 0x05, 0x32, 0x19, 0xfb, 0x1a, 0xb9, 0x7e, 0x3b, 0x72, 0x12, 0x2c,
	0x90, 0x3e, 0x19, 0x11, 0x85, 0xdc, 0xb8, 0x1d, 0x39, 0x09, 0x46, 0x08, 0x56, 0x7d, 0xcc, 0x71,
	0xb5, 0x28, 0xd9, 0x90, 0xdf, 0x4e, 0x1d, 0xb6, 0xea, 0xb2, 0x28, 0x8f, 0x7c, 0x9f, 0x10, 0xc6,
	0x33, 0x84, 0x5a, 0x6f, 0x24, 0xd4, 0x4e, 0x13, 0xea, 0xec, 0x41, 0xc5, 0x24, 0x61, 0x63, 0x1a,
	0x31, 0x32, 0x2b, 0x93, 0xf3, 0x36, 0xc0, 0x29, 0xe1, 0x66, 0x8f, 0xd9, 0xd5, 0x7f, 0x6d, 0xb8,
	0x63, 0x14, 0xae, 0xd3, 0x88, 0x93, 0x97, 0x1c, 0x3d, 0x84, 0xb2, 0xe1, 0xbc, 0x37, 0x09, 0x06,
	0xe3, 0x6a, 0xf9, 0xe8, 0x3d, 0xa8, 0xf4, 0x93, 0x38, 0x26, 0x11, 0xef, 0x09, 0x2f, 0x89, 0x75,
	0x51, 0x5b, 0xda, 0xfb, 0x42, 0x3a, 0xd1, 0xbb, 0xb0, 0x69, 0xc2, 0x38, 0x66, 0x43, 0xdd, 0x0a,
	0x65, 0xed, 0xeb, 0x62, 0x36, 0x4c, 0x67, 0xc2, 0x7d, 0x1e, 0xd0, 0x48, 0x36, 0xc6, 0x34, 0xd3,
	0xb1, 0x74, 0xa2, 0x03, 0xd8, 0xc9, 0x86, 0xf5, 0x82, 0xc8, 0x27, 0x2f, 0xa5, 0xee, 0x05, 0x0f,
	0x65, 0x82, 0x5b, 0x62, 0x05, 0x7d, 0x37, 0x87, 0x50, 0x7d, 0xb7, 0x2e, 0xfb, 0xee, 0xc9, 0x42,
	0x7d, 0xa7, 0xf2, 0xaa, 0xee, 0xcb, 0xee, 0x25, 0x7d, 0xe8, 0x08, 0xee, 0x73, 0xca, 0xf1, 0xa8,
	0x17, 0x25, 0xe1, 0x05, 0x89, 0x7b, 0xf4, 0x52, 0xef, 0xc9, 0x64, 0x93, 0x14, 0xbc, 0x1d, 0xb9,
	0xdc, 0x96, 0xab, 0x67, 0x97, 0x0a, 0xca, 0x9c, 0xbf, 0x6d, 0xd8, 0x31, 0xd4, 0x4f, 0xd3, 0x25,
	0xec, 0x76, 0xfe, 0x1f, 0x40, 0x49, 0x10, 0xda, 0x8b, 0x70, 0x38, 0x3d, 0x7a, 0x98, 0x0d, 0xdb,
	0x38, 0x24, 0x02, 0xad, 0xff, 0x58, 0x2e, 0x2b, 0xd2, 0x41, 0xb9, 0x64, 0xc0, 0xb7, 0xb0, 0x95,
	0xa2, 0x24, 0x61, 0xfa, 0x2c, 0xe6, 0xe7, 0x64, 0x13, 0xa7, 0xab, 0xaf, 0xc2, 0x06, 0x23, 0x7d,
	0x1a, 0xf9, 0x4c, 0xcb, 0x63, 0x4c, 0xb1, 0x12, 0x12, 0xc6, 0xf0, 0x40, 0xc9, 0x50, 0xf2, 0x8c,
	0x99, 0x3d, 0xcc, 0x1b, 0x8b, 0x1c, 0xe6, 0x07, 0x50, 0x52, 0x2d, 0x28, 0x98, 0x52, 0xa7, 0xab,
	0xa8, 0x1c, 0x2d, 0xdf, 0x39, 0x82, 0xdd, 0x99, 0xde, 0x36, 0xc7, 0x20, 0x03, 0xb3, 0x66, 0x60,
	0x3f, 0x59, 0x70, 0x6f, 0x06, 0xf7, 0x2c, 0x60, 0x1c, 0x05, 0x70, 0x77, 0xa2, 0x4b, 0x5f, 0xf9,
	0x59, 0xd5, 0xda, 0x2b, 0xec, 0x97, 0x0f, 0x3f, 0x5d, 0x88, 0xbc, 0xd9, 0xa2, 0xb6, 0x6f, 0xb2,
	0x0e, 0xe6, 0x7c, 0x3c, 0xad, 0x5c, 0xb7, 0x8b, 0xa9, 0xfc, 0xb6, 0xe6, 0x70, 0xfe, 0xb1, 0xa0,
	0x92, 0xc5, 0x66, 0xfb, 0xc5, 0x9a, 0xe9, 0x17, 0x04, 0xab, 0xa9, 0x3e, 0x92, 0xdf, 0x68, 0x07,
	0xd6, 0x82, 0x50, 0xe8, 0xa4, 0xba, 0x47, 0x19, 0x42, 0x3f, 0x31, 0x29, 0x68, 0xc2, 0x65, 0xcb,
	0x14, 0x3c, 0x63, 0x8a, 0x95, 0x3e, 0x0d, 0x43, 0x1c, 0xf9, 0x52, 0xf3, 0x92, 0x67, 0x4c, 0xf4,
	0x0e, 0x00, 0x8d, 0x7a, 0x06, 0xa6, 0x64, 0x2f, 0xd1, 0xa8, 0xab, 0x81, 0x6a, 0xf9, 0x12, 0x07,
	0xa3, 0x24, 0x26, 0x52, 0x79, 0xb9, 0x7c, 0xa2, 0x1c, 0xff, 0xaf, 0x6e, 0x0c, 0x28, 0xfb, 0x9f,
	0x52, 0xa4, 0x6f, 0x26, 0xed, 0x3f, 0x0a, 0x18, 0xd7, 0xf2, 0x3c, 0xcd, 0x25, 0x8f, 0xca, 0x6a,
	0xce, 0x8e, 0xc8, 0xee, 0x74, 0x60, 0xf7, 0x94, 0x70, 0x13, 0xd0, 0xc0, 0x1c, 0xbf, 0x56, 0x97,
	0xc6, 0x9c, 0x2e, 0x0d, 0xc1, 0xd1, 0x35, 0x89, 0x99, 0xb8, 0xe3, 0x6c, 0xc5, 0x9e, 0x36, 0x9d,
	0x0f, 0xe0, 0xfe, 0x5c, 0x52, 0x7d, 0x99, 0x9b, 0xb9, 0x21, 0xd2, 0x6d, 0xea, 0xb9, 0x31, 0x82,
	0xb7, 0xce, 0xe5, 0x48, 0xca, 0x55, 0x46, 0x0d, 0x8a, 0x21, 0xe1, 0x58, 0x66, 0xb5, 0x65, 0xd6,
	0x89, 0x3d, 0xd9, 0xad, 0x30, 0xdd, 0xed, 0xd1, 0x29, 0xac, 0xa9, 0x5b, 0xae, 0x0c, 0x1b, 0xcf,
	0x9b, 0xed, 0x46, 0xab, 0x7d, 0xba, 0xbd, 0x22, 0x0c, 0xef, 0xbc, 0xdd, 0x16, 0x86, 0x85, 0x00,
	0xd6, 0x4f, 0x8e, 0x5b, 0xcf, 0x9a, 0x8d, 0x6d, 0x5b, 0x2c, 0x74, 0x5b, 0x5f, 0x35, 0xcf, 0xce,
	0xbb, 0xdb, 0x05, 0x61, 0x74, 0xce, 0xeb, 0xf5, 0x66, 0xa7, 0xb3, 0xbd, 0xfa, 0x88, 0x43, 0x39,
	0x7d, 0x69, 0x22, 0xa8, 0x1c, 0xd7, 0xbb, 0xad, 0xb3, 0x76, 0x6f, 0x9a, 0x75, 0x17, 0x90, 0xf6,
	0xb5, 0xda, 0xbd, 0xe7, 0xde, 0xd9, 0xa9, 0x27, 0xa0, 0x56, 0x2a, 0xd6, 0xa4, 0xb3, 0xd1, 0x5d,
	0xd8, 0xd2, 0x3e, 0xbd, 0x77, 0x21, 0x15, 0x66, 0x4a, 0x58, 0x3d, 0xfc, 0x73, 0x13, 0xca, 0x86,
	0xa7, 0xce, 0x75, 0x1f, 0xfd, 0x6c, 0x99, 0x81, 0x39, 0x79, 0xd7, 0x7c, 0xb2, 0x50, 0x73, 0x64,
	0x46, 0x76, 0xed, 0x69, 0x2e, 0xac, 0x16, 0xf7, 0x15, 0x94, 0x53, 0xba, 0xa3, 0x8f, 0x16, 0xca,
	0x35, 0x9d, 0xe9, 0xb5, 0xa3, 0x5c, 0xdd, 0x8d, 0x5e, 0x41, 0xa5, 0x21, 0x1f, 0x28, 0xcb, 0x57,
	0xb0, 0xd8, 0x3b, 0x4e, 0xbe, 0x2d, 0xd1, 0x8f, 0xb0, 0x25, 0x8e, 0x94, 0xd9, 0x9c, 0xa1, 0x1c,
	0x49, 0x72, 0xfe, 0xfa, 0x81, 0x85, 0x7e, 0xb1, 0x00, 0xa5, 0xc8, 0x37, 0x4f, 0x9f, 0xdc, 0x0c,
	0x2c, 0x35, 0x00, 0xd0, 0x6f, 0x16, 0xa0, 0xce, 0x15, 0xbd, 0x31, 0xfe, 0xe6, 0x35, 0x89, 0x38,
	0xcb, 0x5f, 0xcd, 0xf1, 0x12, 0xf7, 0x9d, 0x1a, 0xe3, 0x07, 0x16, 0xfa, 0xc3, 0x82, 0x7b, 0xf3,
	0x14, 0x31, 0x54, 0x5f, 0x6a, 0xd6, 0xe9, 0x0a, 0x3f, 0x5f, 0x26, 0x89, 0xbc, 0x8a, 0x57, 0xd0,
	0xef, 0x59, 0x0d, 0xf5, 0xa0, 0xcc, 0x59, 0x5f, 0x76, 0xcc, 0xd6, 0x3e, 0x5b, 0x22, 0x89, 0x2e,
	0xef, 0x57, 0x0b, 0x90, 0x47, 0xc6, 0x34, 0xe6, 0x99, 0xd7, 0xdd, 0xf2, 0xda, 0xe4, 0x39, 0x6e,
	0xce, 0x8a, 0xd0, 0xf3, 0xce, 0xcc, 0x9c, 0x59, 0x90, 0xab, 0xd7, 0x8f, 0xbe, 0x5a, 0x63, 0xb9,
	0x24, 0xea, 0x36, 0x74, 0x56, 0xe4, 0x29, 0x98, 0x9f, 0x6c, 0xe8, 0x64, 0xa1, 0xf4, 0x6f, 0x1c,
	0x8d, 0xf9, 0x58, 0xfb, 0x02, 0xbe, 0x2e, 0x1a, 0xdf, 0xc5, 0xba, 0x0c, 0xfa, 0xf0, 0xbf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x4d, 0x2c, 0x2e, 0x8d, 0x7e, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkflowSvcClient is the client API for WorkflowSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkflowSvcClient interface {
	CreateWorkflow(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	GetWorkflow(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Workflow, error)
	DeleteWorkflow(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Empty, error)
	ListWorkflows(ctx context.Context, in *Empty, opts ...grpc.CallOption) (WorkflowSvc_ListWorkflowsClient, error)
	GetWorkflowContext(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*WorkflowContext, error)
	ShowWorkflowEvents(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (WorkflowSvc_ShowWorkflowEventsClient, error)
	GetWorkflowContexts(ctx context.Context, in *WorkflowContextRequest, opts ...grpc.CallOption) (*WorkflowContextList, error)
	GetWorkflowActions(ctx context.Context, in *WorkflowActionsRequest, opts ...grpc.CallOption) (*WorkflowActionList, error)
	ReportActionStatus(ctx context.Context, in *WorkflowActionStatus, opts ...grpc.CallOption) (*Empty, error)
	GetWorkflowData(ctx context.Context, in *GetWorkflowDataRequest, opts ...grpc.CallOption) (*GetWorkflowDataResponse, error)
	UpdateWorkflowData(ctx context.Context, in *UpdateWorkflowDataRequest, opts ...grpc.CallOption) (*Empty, error)
}

type workflowSvcClient struct {
	cc *grpc.ClientConn
}

func NewWorkflowSvcClient(cc *grpc.ClientConn) WorkflowSvcClient {
	return &workflowSvcClient{cc}
}

func (c *workflowSvcClient) CreateWorkflow(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/github.com.packethost.rover.protos.workflow.WorkflowSvc/CreateWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowSvcClient) GetWorkflow(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Workflow, error) {
	out := new(Workflow)
	err := c.cc.Invoke(ctx, "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowSvcClient) DeleteWorkflow(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/github.com.packethost.rover.protos.workflow.WorkflowSvc/DeleteWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowSvcClient) ListWorkflows(ctx context.Context, in *Empty, opts ...grpc.CallOption) (WorkflowSvc_ListWorkflowsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WorkflowSvc_serviceDesc.Streams[0], "/github.com.packethost.rover.protos.workflow.WorkflowSvc/ListWorkflows", opts...)
	if err != nil {
		return nil, err
	}
	x := &workflowSvcListWorkflowsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WorkflowSvc_ListWorkflowsClient interface {
	Recv() (*Workflow, error)
	grpc.ClientStream
}

type workflowSvcListWorkflowsClient struct {
	grpc.ClientStream
}

func (x *workflowSvcListWorkflowsClient) Recv() (*Workflow, error) {
	m := new(Workflow)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *workflowSvcClient) GetWorkflowContext(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*WorkflowContext, error) {
	out := new(WorkflowContext)
	err := c.cc.Invoke(ctx, "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflowContext", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowSvcClient) ShowWorkflowEvents(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (WorkflowSvc_ShowWorkflowEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WorkflowSvc_serviceDesc.Streams[1], "/github.com.packethost.rover.protos.workflow.WorkflowSvc/ShowWorkflowEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &workflowSvcShowWorkflowEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WorkflowSvc_ShowWorkflowEventsClient interface {
	Recv() (*WorkflowActionStatus, error)
	grpc.ClientStream
}

type workflowSvcShowWorkflowEventsClient struct {
	grpc.ClientStream
}

func (x *workflowSvcShowWorkflowEventsClient) Recv() (*WorkflowActionStatus, error) {
	m := new(WorkflowActionStatus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *workflowSvcClient) GetWorkflowContexts(ctx context.Context, in *WorkflowContextRequest, opts ...grpc.CallOption) (*WorkflowContextList, error) {
	out := new(WorkflowContextList)
	err := c.cc.Invoke(ctx, "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflowContexts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowSvcClient) GetWorkflowActions(ctx context.Context, in *WorkflowActionsRequest, opts ...grpc.CallOption) (*WorkflowActionList, error) {
	out := new(WorkflowActionList)
	err := c.cc.Invoke(ctx, "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflowActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowSvcClient) ReportActionStatus(ctx context.Context, in *WorkflowActionStatus, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/github.com.packethost.rover.protos.workflow.WorkflowSvc/ReportActionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowSvcClient) GetWorkflowData(ctx context.Context, in *GetWorkflowDataRequest, opts ...grpc.CallOption) (*GetWorkflowDataResponse, error) {
	out := new(GetWorkflowDataResponse)
	err := c.cc.Invoke(ctx, "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflowData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowSvcClient) UpdateWorkflowData(ctx context.Context, in *UpdateWorkflowDataRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/github.com.packethost.rover.protos.workflow.WorkflowSvc/UpdateWorkflowData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkflowSvcServer is the server API for WorkflowSvc service.
type WorkflowSvcServer interface {
	CreateWorkflow(context.Context, *CreateRequest) (*CreateResponse, error)
	GetWorkflow(context.Context, *GetRequest) (*Workflow, error)
	DeleteWorkflow(context.Context, *GetRequest) (*Empty, error)
	ListWorkflows(*Empty, WorkflowSvc_ListWorkflowsServer) error
	GetWorkflowContext(context.Context, *GetRequest) (*WorkflowContext, error)
	ShowWorkflowEvents(*GetRequest, WorkflowSvc_ShowWorkflowEventsServer) error
	GetWorkflowContexts(context.Context, *WorkflowContextRequest) (*WorkflowContextList, error)
	GetWorkflowActions(context.Context, *WorkflowActionsRequest) (*WorkflowActionList, error)
	ReportActionStatus(context.Context, *WorkflowActionStatus) (*Empty, error)
	GetWorkflowData(context.Context, *GetWorkflowDataRequest) (*GetWorkflowDataResponse, error)
	UpdateWorkflowData(context.Context, *UpdateWorkflowDataRequest) (*Empty, error)
}

// UnimplementedWorkflowSvcServer can be embedded to have forward compatible implementations.
type UnimplementedWorkflowSvcServer struct {
}

func (*UnimplementedWorkflowSvcServer) CreateWorkflow(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflow not implemented")
}
func (*UnimplementedWorkflowSvcServer) GetWorkflow(ctx context.Context, req *GetRequest) (*Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflow not implemented")
}
func (*UnimplementedWorkflowSvcServer) DeleteWorkflow(ctx context.Context, req *GetRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWorkflow not implemented")
}
func (*UnimplementedWorkflowSvcServer) ListWorkflows(req *Empty, srv WorkflowSvc_ListWorkflowsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListWorkflows not implemented")
}
func (*UnimplementedWorkflowSvcServer) GetWorkflowContext(ctx context.Context, req *GetRequest) (*WorkflowContext, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowContext not implemented")
}
func (*UnimplementedWorkflowSvcServer) ShowWorkflowEvents(req *GetRequest, srv WorkflowSvc_ShowWorkflowEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method ShowWorkflowEvents not implemented")
}
func (*UnimplementedWorkflowSvcServer) GetWorkflowContexts(ctx context.Context, req *WorkflowContextRequest) (*WorkflowContextList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowContexts not implemented")
}
func (*UnimplementedWorkflowSvcServer) GetWorkflowActions(ctx context.Context, req *WorkflowActionsRequest) (*WorkflowActionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowActions not implemented")
}
func (*UnimplementedWorkflowSvcServer) ReportActionStatus(ctx context.Context, req *WorkflowActionStatus) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportActionStatus not implemented")
}
func (*UnimplementedWorkflowSvcServer) GetWorkflowData(ctx context.Context, req *GetWorkflowDataRequest) (*GetWorkflowDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowData not implemented")
}
func (*UnimplementedWorkflowSvcServer) UpdateWorkflowData(ctx context.Context, req *UpdateWorkflowDataRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWorkflowData not implemented")
}

func RegisterWorkflowSvcServer(s *grpc.Server, srv WorkflowSvcServer) {
	s.RegisterService(&_WorkflowSvc_serviceDesc, srv)
}

func _WorkflowSvc_CreateWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowSvcServer).CreateWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.packethost.rover.protos.workflow.WorkflowSvc/CreateWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowSvcServer).CreateWorkflow(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowSvc_GetWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowSvcServer).GetWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowSvcServer).GetWorkflow(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowSvc_DeleteWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowSvcServer).DeleteWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.packethost.rover.protos.workflow.WorkflowSvc/DeleteWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowSvcServer).DeleteWorkflow(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowSvc_ListWorkflows_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WorkflowSvcServer).ListWorkflows(m, &workflowSvcListWorkflowsServer{stream})
}

type WorkflowSvc_ListWorkflowsServer interface {
	Send(*Workflow) error
	grpc.ServerStream
}

type workflowSvcListWorkflowsServer struct {
	grpc.ServerStream
}

func (x *workflowSvcListWorkflowsServer) Send(m *Workflow) error {
	return x.ServerStream.SendMsg(m)
}

func _WorkflowSvc_GetWorkflowContext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowSvcServer).GetWorkflowContext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflowContext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowSvcServer).GetWorkflowContext(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowSvc_ShowWorkflowEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WorkflowSvcServer).ShowWorkflowEvents(m, &workflowSvcShowWorkflowEventsServer{stream})
}

type WorkflowSvc_ShowWorkflowEventsServer interface {
	Send(*WorkflowActionStatus) error
	grpc.ServerStream
}

type workflowSvcShowWorkflowEventsServer struct {
	grpc.ServerStream
}

func (x *workflowSvcShowWorkflowEventsServer) Send(m *WorkflowActionStatus) error {
	return x.ServerStream.SendMsg(m)
}

func _WorkflowSvc_GetWorkflowContexts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowContextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowSvcServer).GetWorkflowContexts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflowContexts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowSvcServer).GetWorkflowContexts(ctx, req.(*WorkflowContextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowSvc_GetWorkflowActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowActionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowSvcServer).GetWorkflowActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflowActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowSvcServer).GetWorkflowActions(ctx, req.(*WorkflowActionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowSvc_ReportActionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowActionStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowSvcServer).ReportActionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.packethost.rover.protos.workflow.WorkflowSvc/ReportActionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowSvcServer).ReportActionStatus(ctx, req.(*WorkflowActionStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowSvc_GetWorkflowData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowSvcServer).GetWorkflowData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.packethost.rover.protos.workflow.WorkflowSvc/GetWorkflowData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowSvcServer).GetWorkflowData(ctx, req.(*GetWorkflowDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowSvc_UpdateWorkflowData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkflowDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowSvcServer).UpdateWorkflowData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.packethost.rover.protos.workflow.WorkflowSvc/UpdateWorkflowData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowSvcServer).UpdateWorkflowData(ctx, req.(*UpdateWorkflowDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkflowSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.packethost.rover.protos.workflow.WorkflowSvc",
	HandlerType: (*WorkflowSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkflow",
			Handler:    _WorkflowSvc_CreateWorkflow_Handler,
		},
		{
			MethodName: "GetWorkflow",
			Handler:    _WorkflowSvc_GetWorkflow_Handler,
		},
		{
			MethodName: "DeleteWorkflow",
			Handler:    _WorkflowSvc_DeleteWorkflow_Handler,
		},
		{
			MethodName: "GetWorkflowContext",
			Handler:    _WorkflowSvc_GetWorkflowContext_Handler,
		},
		{
			MethodName: "GetWorkflowContexts",
			Handler:    _WorkflowSvc_GetWorkflowContexts_Handler,
		},
		{
			MethodName: "GetWorkflowActions",
			Handler:    _WorkflowSvc_GetWorkflowActions_Handler,
		},
		{
			MethodName: "ReportActionStatus",
			Handler:    _WorkflowSvc_ReportActionStatus_Handler,
		},
		{
			MethodName: "GetWorkflowData",
			Handler:    _WorkflowSvc_GetWorkflowData_Handler,
		},
		{
			MethodName: "UpdateWorkflowData",
			Handler:    _WorkflowSvc_UpdateWorkflowData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListWorkflows",
			Handler:       _WorkflowSvc_ListWorkflows_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ShowWorkflowEvents",
			Handler:       _WorkflowSvc_ShowWorkflowEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "workflow.proto",
}
