// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rover.proto

package rover

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActionState int32

const (
	ActionState_ACTION_PENDING     ActionState = 0
	ActionState_ACTION_IN_PROGRESS ActionState = 1
	ActionState_ACTION_SUCCESS     ActionState = 2
	ActionState_ACTION_FAILED      ActionState = 3
	ActionState_ACTION_TIMEOUT     ActionState = 4
)

var ActionState_name = map[int32]string{
	0: "ACTION_PENDING",
	1: "ACTION_IN_PROGRESS",
	2: "ACTION_SUCCESS",
	3: "ACTION_FAILED",
	4: "ACTION_TIMEOUT",
}

var ActionState_value = map[string]int32{
	"ACTION_PENDING":     0,
	"ACTION_IN_PROGRESS": 1,
	"ACTION_SUCCESS":     2,
	"ACTION_FAILED":      3,
	"ACTION_TIMEOUT":     4,
}

func (x ActionState) String() string {
	return proto.EnumName(ActionState_name, int32(x))
}

func (ActionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a2b4b2643fc791e2, []int{0}
}

type WorkflowState int32

const (
	WorkflowState_WF_PENDING     WorkflowState = 0
	WorkflowState_WF_IN_PROGRESS WorkflowState = 1
	WorkflowState_WF_SUCCESS     WorkflowState = 2
	WorkflowState_WF_FAILED      WorkflowState = 3
	WorkflowState_WF_TIMEOUT     WorkflowState = 4
)

var WorkflowState_name = map[int32]string{
	0: "WF_PENDING",
	1: "WF_IN_PROGRESS",
	2: "WF_SUCCESS",
	3: "WF_FAILED",
	4: "WF_TIMEOUT",
}

var WorkflowState_value = map[string]int32{
	"WF_PENDING":     0,
	"WF_IN_PROGRESS": 1,
	"WF_SUCCESS":     2,
	"WF_FAILED":      3,
	"WF_TIMEOUT":     4,
}

func (x WorkflowState) String() string {
	return proto.EnumName(WorkflowState_name, int32(x))
}

func (WorkflowState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a2b4b2643fc791e2, []int{1}
}

type WorkflowContextRequest struct {
	WorkerId             string   `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowContextRequest) Reset()         { *m = WorkflowContextRequest{} }
func (m *WorkflowContextRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowContextRequest) ProtoMessage()    {}
func (*WorkflowContextRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4b2643fc791e2, []int{0}
}

func (m *WorkflowContextRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowContextRequest.Unmarshal(m, b)
}
func (m *WorkflowContextRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowContextRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowContextRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowContextRequest.Merge(m, src)
}
func (m *WorkflowContextRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowContextRequest.Size(m)
}
func (m *WorkflowContextRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowContextRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowContextRequest proto.InternalMessageInfo

func (m *WorkflowContextRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type WorkflowContext struct {
	WorkflowId           string      `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	CurrentWorker        string      `protobuf:"bytes,2,opt,name=current_worker,json=currentWorker,proto3" json:"current_worker,omitempty"`
	CurrentTask          string      `protobuf:"bytes,3,opt,name=current_task,json=currentTask,proto3" json:"current_task,omitempty"`
	CurrentAction        string      `protobuf:"bytes,4,opt,name=current_action,json=currentAction,proto3" json:"current_action,omitempty"`
	CurrentActionIndex   int64       `protobuf:"varint,5,opt,name=current_action_index,json=currentActionIndex,proto3" json:"current_action_index,omitempty"`
	CurrentActionState   ActionState `protobuf:"varint,6,opt,name=current_action_state,json=currentActionState,proto3,enum=rover.ActionState" json:"current_action_state,omitempty"`
	TotalNumberOfActions int64       `protobuf:"varint,7,opt,name=total_number_of_actions,json=totalNumberOfActions,proto3" json:"total_number_of_actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WorkflowContext) Reset()         { *m = WorkflowContext{} }
func (m *WorkflowContext) String() string { return proto.CompactTextString(m) }
func (*WorkflowContext) ProtoMessage()    {}
func (*WorkflowContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4b2643fc791e2, []int{1}
}

func (m *WorkflowContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowContext.Unmarshal(m, b)
}
func (m *WorkflowContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowContext.Marshal(b, m, deterministic)
}
func (m *WorkflowContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowContext.Merge(m, src)
}
func (m *WorkflowContext) XXX_Size() int {
	return xxx_messageInfo_WorkflowContext.Size(m)
}
func (m *WorkflowContext) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowContext.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowContext proto.InternalMessageInfo

func (m *WorkflowContext) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *WorkflowContext) GetCurrentWorker() string {
	if m != nil {
		return m.CurrentWorker
	}
	return ""
}

func (m *WorkflowContext) GetCurrentTask() string {
	if m != nil {
		return m.CurrentTask
	}
	return ""
}

func (m *WorkflowContext) GetCurrentAction() string {
	if m != nil {
		return m.CurrentAction
	}
	return ""
}

func (m *WorkflowContext) GetCurrentActionIndex() int64 {
	if m != nil {
		return m.CurrentActionIndex
	}
	return 0
}

func (m *WorkflowContext) GetCurrentActionState() ActionState {
	if m != nil {
		return m.CurrentActionState
	}
	return ActionState_ACTION_PENDING
}

func (m *WorkflowContext) GetTotalNumberOfActions() int64 {
	if m != nil {
		return m.TotalNumberOfActions
	}
	return 0
}

type WorkflowContextList struct {
	WorkflowContexts     []*WorkflowContext `protobuf:"bytes,1,rep,name=workflow_contexts,json=workflowContexts,proto3" json:"workflow_contexts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WorkflowContextList) Reset()         { *m = WorkflowContextList{} }
func (m *WorkflowContextList) String() string { return proto.CompactTextString(m) }
func (*WorkflowContextList) ProtoMessage()    {}
func (*WorkflowContextList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4b2643fc791e2, []int{2}
}

func (m *WorkflowContextList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowContextList.Unmarshal(m, b)
}
func (m *WorkflowContextList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowContextList.Marshal(b, m, deterministic)
}
func (m *WorkflowContextList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowContextList.Merge(m, src)
}
func (m *WorkflowContextList) XXX_Size() int {
	return xxx_messageInfo_WorkflowContextList.Size(m)
}
func (m *WorkflowContextList) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowContextList.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowContextList proto.InternalMessageInfo

func (m *WorkflowContextList) GetWorkflowContexts() []*WorkflowContext {
	if m != nil {
		return m.WorkflowContexts
	}
	return nil
}

type WorkflowActionsRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowActionsRequest) Reset()         { *m = WorkflowActionsRequest{} }
func (m *WorkflowActionsRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowActionsRequest) ProtoMessage()    {}
func (*WorkflowActionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4b2643fc791e2, []int{3}
}

func (m *WorkflowActionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowActionsRequest.Unmarshal(m, b)
}
func (m *WorkflowActionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowActionsRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowActionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowActionsRequest.Merge(m, src)
}
func (m *WorkflowActionsRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowActionsRequest.Size(m)
}
func (m *WorkflowActionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowActionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowActionsRequest proto.InternalMessageInfo

func (m *WorkflowActionsRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type WorkflowAction struct {
	TaskName             string   `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Timeout              int64    `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Command              string   `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	OnTimeout            string   `protobuf:"bytes,6,opt,name=on_timeout,json=onTimeout,proto3" json:"on_timeout,omitempty"`
	OnFailure            string   `protobuf:"bytes,7,opt,name=on_failure,json=onFailure,proto3" json:"on_failure,omitempty"`
	WorkerId             string   `protobuf:"bytes,8,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowAction) Reset()         { *m = WorkflowAction{} }
func (m *WorkflowAction) String() string { return proto.CompactTextString(m) }
func (*WorkflowAction) ProtoMessage()    {}
func (*WorkflowAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4b2643fc791e2, []int{4}
}

func (m *WorkflowAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowAction.Unmarshal(m, b)
}
func (m *WorkflowAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowAction.Marshal(b, m, deterministic)
}
func (m *WorkflowAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowAction.Merge(m, src)
}
func (m *WorkflowAction) XXX_Size() int {
	return xxx_messageInfo_WorkflowAction.Size(m)
}
func (m *WorkflowAction) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowAction.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowAction proto.InternalMessageInfo

func (m *WorkflowAction) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *WorkflowAction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowAction) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *WorkflowAction) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *WorkflowAction) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *WorkflowAction) GetOnTimeout() string {
	if m != nil {
		return m.OnTimeout
	}
	return ""
}

func (m *WorkflowAction) GetOnFailure() string {
	if m != nil {
		return m.OnFailure
	}
	return ""
}

func (m *WorkflowAction) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type WorkflowActionList struct {
	ActionList           []*WorkflowAction `protobuf:"bytes,1,rep,name=action_list,json=actionList,proto3" json:"action_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WorkflowActionList) Reset()         { *m = WorkflowActionList{} }
func (m *WorkflowActionList) String() string { return proto.CompactTextString(m) }
func (*WorkflowActionList) ProtoMessage()    {}
func (*WorkflowActionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4b2643fc791e2, []int{5}
}

func (m *WorkflowActionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowActionList.Unmarshal(m, b)
}
func (m *WorkflowActionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowActionList.Marshal(b, m, deterministic)
}
func (m *WorkflowActionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowActionList.Merge(m, src)
}
func (m *WorkflowActionList) XXX_Size() int {
	return xxx_messageInfo_WorkflowActionList.Size(m)
}
func (m *WorkflowActionList) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowActionList.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowActionList proto.InternalMessageInfo

func (m *WorkflowActionList) GetActionList() []*WorkflowAction {
	if m != nil {
		return m.ActionList
	}
	return nil
}

type WorkflowActionStatus struct {
	WorkflowId           string               `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TaskName             string               `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	ActionName           string               `protobuf:"bytes,3,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	ActionStatus         ActionState          `protobuf:"varint,4,opt,name=action_status,json=actionStatus,proto3,enum=rover.ActionState" json:"action_status,omitempty"`
	Seconds              int64                `protobuf:"varint,5,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Message              string               `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	WorkerId             string               `protobuf:"bytes,8,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WorkflowActionStatus) Reset()         { *m = WorkflowActionStatus{} }
func (m *WorkflowActionStatus) String() string { return proto.CompactTextString(m) }
func (*WorkflowActionStatus) ProtoMessage()    {}
func (*WorkflowActionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4b2643fc791e2, []int{6}
}

func (m *WorkflowActionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowActionStatus.Unmarshal(m, b)
}
func (m *WorkflowActionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowActionStatus.Marshal(b, m, deterministic)
}
func (m *WorkflowActionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowActionStatus.Merge(m, src)
}
func (m *WorkflowActionStatus) XXX_Size() int {
	return xxx_messageInfo_WorkflowActionStatus.Size(m)
}
func (m *WorkflowActionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowActionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowActionStatus proto.InternalMessageInfo

func (m *WorkflowActionStatus) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *WorkflowActionStatus) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *WorkflowActionStatus) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *WorkflowActionStatus) GetActionStatus() ActionState {
	if m != nil {
		return m.ActionStatus
	}
	return ActionState_ACTION_PENDING
}

func (m *WorkflowActionStatus) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *WorkflowActionStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *WorkflowActionStatus) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *WorkflowActionStatus) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func init() {
	proto.RegisterEnum("rover.ActionState", ActionState_name, ActionState_value)
	proto.RegisterEnum("rover.WorkflowState", WorkflowState_name, WorkflowState_value)
	proto.RegisterType((*WorkflowContextRequest)(nil), "rover.WorkflowContextRequest")
	proto.RegisterType((*WorkflowContext)(nil), "rover.WorkflowContext")
	proto.RegisterType((*WorkflowContextList)(nil), "rover.WorkflowContextList")
	proto.RegisterType((*WorkflowActionsRequest)(nil), "rover.WorkflowActionsRequest")
	proto.RegisterType((*WorkflowAction)(nil), "rover.WorkflowAction")
	proto.RegisterType((*WorkflowActionList)(nil), "rover.WorkflowActionList")
	proto.RegisterType((*WorkflowActionStatus)(nil), "rover.WorkflowActionStatus")
}

func init() { proto.RegisterFile("rover.proto", fileDescriptor_a2b4b2643fc791e2) }

var fileDescriptor_a2b4b2643fc791e2 = []byte{
	// 739 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0x5d, 0x6f, 0xda, 0x48,
	0x14, 0x8d, 0x21, 0x24, 0xe1, 0x12, 0x58, 0x32, 0x61, 0x59, 0x2f, 0x51, 0x14, 0x16, 0x69, 0x25,
	0x94, 0x07, 0x52, 0x51, 0xa5, 0x1f, 0x8f, 0x88, 0x40, 0x64, 0x35, 0x85, 0xc8, 0x10, 0x21, 0xf5,
	0xc5, 0x1a, 0xf0, 0x10, 0x59, 0x60, 0x0f, 0xf5, 0x8c, 0x4b, 0xfa, 0xd3, 0xfa, 0x37, 0xfa, 0x23,
	0xfa, 0x23, 0xfa, 0x54, 0x79, 0x66, 0x0c, 0xb6, 0x43, 0x9b, 0xb7, 0xcc, 0x39, 0xe7, 0xde, 0xeb,
	0x9c, 0x73, 0x67, 0x80, 0x82, 0x4f, 0xbf, 0x10, 0xbf, 0xb5, 0xf2, 0x29, 0xa7, 0x28, 0x27, 0x0e,
	0xb5, 0xb3, 0x47, 0x4a, 0x1f, 0x97, 0xe4, 0x4a, 0x80, 0xd3, 0x60, 0x7e, 0x45, 0xdc, 0x15, 0xff,
	0x2a, 0x35, 0xb5, 0x8b, 0x34, 0xc9, 0x1d, 0x97, 0x30, 0x8e, 0xdd, 0x95, 0x14, 0x34, 0xae, 0xa1,
	0x3a, 0xa1, 0xfe, 0x62, 0xbe, 0xa4, 0xeb, 0x2e, 0xf5, 0x38, 0x79, 0xe2, 0x26, 0xf9, 0x1c, 0x10,
	0xc6, 0xd1, 0x19, 0xe4, 0xd7, 0xd4, 0x5f, 0x10, 0xdf, 0x72, 0x6c, 0x5d, 0xab, 0x6b, 0xcd, 0xbc,
	0x79, 0x24, 0x01, 0xc3, 0x6e, 0x7c, 0xcf, 0xc0, 0x5f, 0xa9, 0x3a, 0x74, 0x01, 0x85, 0xb5, 0x82,
	0xb6, 0x25, 0x10, 0x41, 0x86, 0x8d, 0xfe, 0x87, 0xd2, 0x2c, 0xf0, 0x7d, 0xe2, 0x71, 0x4b, 0x36,
	0xd2, 0x33, 0x42, 0x53, 0x54, 0xe8, 0x44, 0x80, 0xe8, 0x3f, 0x38, 0x8e, 0x64, 0x1c, 0xb3, 0x85,
	0x9e, 0x15, 0xa2, 0x82, 0xc2, 0xc6, 0x98, 0x2d, 0xe2, 0x9d, 0xf0, 0x8c, 0x3b, 0xd4, 0xd3, 0xf7,
	0x13, 0x9d, 0x3a, 0x02, 0x44, 0xaf, 0xa0, 0x92, 0x94, 0x59, 0x8e, 0x67, 0x93, 0x27, 0x3d, 0x57,
	0xd7, 0x9a, 0x59, 0x13, 0x25, 0xc4, 0x46, 0xc8, 0xa0, 0x9b, 0x67, 0x15, 0x8c, 0x63, 0x4e, 0xf4,
	0x83, 0xba, 0xd6, 0x2c, 0xb5, 0x51, 0x4b, 0xfa, 0x2f, 0x2b, 0x46, 0x21, 0x93, 0xea, 0x22, 0x30,
	0x74, 0x0d, 0xff, 0x70, 0xca, 0xf1, 0xd2, 0xf2, 0x02, 0x77, 0x4a, 0x7c, 0x8b, 0xce, 0x55, 0x37,
	0xa6, 0x1f, 0x8a, 0xd1, 0x15, 0x41, 0x0f, 0x04, 0x3b, 0x9c, 0xcb, 0x52, 0xd6, 0xf8, 0x04, 0xa7,
	0x29, 0x4f, 0xef, 0x1c, 0xc6, 0x51, 0x17, 0x4e, 0x36, 0xbe, 0xce, 0x24, 0xce, 0x74, 0xad, 0x9e,
	0x6d, 0x16, 0xda, 0x55, 0xf5, 0x41, 0xe9, 0x08, 0xcb, 0xeb, 0x24, 0xc0, 0x1a, 0xef, 0xb7, 0x39,
	0xab, 0x71, 0x51, 0xce, 0x2f, 0xc5, 0xd6, 0xf8, 0xa1, 0x41, 0x29, 0x59, 0x1b, 0xee, 0x46, 0x18,
	0x8d, 0xe5, 0x61, 0x97, 0x44, 0xbb, 0x11, 0x02, 0x03, 0xec, 0x12, 0x84, 0x60, 0x5f, 0xe0, 0x32,
	0x5c, 0xf1, 0x37, 0xaa, 0x40, 0xce, 0x71, 0xf1, 0x23, 0x51, 0x61, 0xca, 0x03, 0xd2, 0xe1, 0x30,
	0xdc, 0x47, 0x1a, 0x70, 0x91, 0x5f, 0xd6, 0x8c, 0x8e, 0x21, 0x33, 0xa3, 0xae, 0x8b, 0x3d, 0x5b,
	0x84, 0x95, 0x37, 0xa3, 0x23, 0x3a, 0x07, 0xa0, 0x9e, 0x15, 0x95, 0x1d, 0x08, 0x32, 0x4f, 0xbd,
	0xb1, 0x2a, 0x94, 0xf4, 0x1c, 0x3b, 0xcb, 0xc0, 0x27, 0xc2, 0x6d, 0x41, 0xf7, 0x25, 0x90, 0x5c,
	0xea, 0xa3, 0xd4, 0x52, 0xdf, 0x01, 0x4a, 0xfe, 0x9f, 0xc2, 0xfe, 0x37, 0x50, 0x50, 0xab, 0xb0,
	0x74, 0x18, 0x57, 0xc6, 0xff, 0x9d, 0x32, 0x5e, 0xea, 0x4d, 0xc0, 0x9b, 0xba, 0xc6, 0xb7, 0x0c,
	0x54, 0x92, 0x74, 0xb8, 0x1c, 0x01, 0x7b, 0xf9, 0x9e, 0x24, 0xdc, 0xcd, 0xa4, 0xdc, 0xbd, 0xd8,
	0x7c, 0x8e, 0xa0, 0xa5, 0x9f, 0x6a, 0xae, 0x10, 0xbc, 0x85, 0x62, 0x6c, 0x75, 0x03, 0x26, 0xac,
	0xdd, 0xbd, 0xbb, 0xc7, 0x38, 0xfe, 0x5d, 0x3a, 0x1c, 0x32, 0x32, 0xa3, 0x9e, 0xcd, 0xd4, 0x05,
	0x89, 0x8e, 0x21, 0xe3, 0x12, 0xc6, 0xc2, 0xfc, 0xa4, 0xe1, 0xd1, 0x11, 0xbd, 0x83, 0xfc, 0xcc,
	0x27, 0x98, 0x13, 0xbb, 0xc3, 0x85, 0xdb, 0x85, 0x76, 0xad, 0x25, 0xdf, 0x9c, 0x56, 0xf4, 0xe6,
	0xb4, 0xc6, 0xd1, 0x9b, 0x63, 0x6e, 0xc5, 0x7f, 0x4c, 0xe2, 0x92, 0x43, 0x21, 0x7e, 0x9f, 0x10,
	0x94, 0x3a, 0xdd, 0xb1, 0x31, 0x1c, 0x58, 0xf7, 0xbd, 0xc1, 0x8d, 0x31, 0xb8, 0x2d, 0xef, 0xa1,
	0x2a, 0x20, 0x85, 0x19, 0x03, 0xeb, 0xde, 0x1c, 0xde, 0x9a, 0xbd, 0xd1, 0xa8, 0xac, 0xc5, 0xb4,
	0xa3, 0x87, 0x6e, 0x37, 0xc4, 0x32, 0xe8, 0x04, 0x8a, 0x0a, 0xeb, 0x77, 0x8c, 0xbb, 0xde, 0x4d,
	0x39, 0x1b, 0x93, 0x8d, 0x8d, 0x8f, 0xbd, 0xe1, 0xc3, 0xb8, 0xbc, 0x7f, 0x39, 0x85, 0x62, 0x14,
	0x98, 0x9c, 0x5b, 0x02, 0x98, 0xf4, 0x63, 0x33, 0x11, 0x94, 0x26, 0xfd, 0xd4, 0x3c, 0xa9, 0xd9,
	0xce, 0x2a, 0x42, 0x7e, 0xd2, 0xdf, 0xce, 0x91, 0xf4, 0x66, 0x46, 0xfb, 0xa7, 0x06, 0x39, 0x33,
	0x0c, 0x02, 0x99, 0x70, 0x7a, 0x4b, 0x78, 0xea, 0xe6, 0x32, 0x74, 0xfe, 0x9b, 0x2b, 0x2d, 0x6f,
	0x6b, 0xad, 0xb6, 0x9b, 0x16, 0x1b, 0xb7, 0x87, 0xee, 0x01, 0xc5, 0x7a, 0xaa, 0x8b, 0xfe, 0xac,
	0x65, 0xf2, 0x01, 0xa8, 0xfd, 0xbb, 0x93, 0x56, 0x1d, 0x3f, 0x00, 0x32, 0xc9, 0x8a, 0xfa, 0x3c,
	0xb1, 0xc2, 0x67, 0x3b, 0x4b, 0x24, 0x59, 0xab, 0x3e, 0x5b, 0x80, 0x5e, 0xf8, 0x8b, 0xd4, 0xd8,
	0x9b, 0x1e, 0x08, 0xe4, 0xf5, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x59, 0xbc, 0xe3, 0x39, 0xc7,
	0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RoverClient is the client API for Rover service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoverClient interface {
	GetWorkflowContexts(ctx context.Context, in *WorkflowContextRequest, opts ...grpc.CallOption) (*WorkflowContextList, error)
	GetWorkflowActions(ctx context.Context, in *WorkflowActionsRequest, opts ...grpc.CallOption) (*WorkflowActionList, error)
	ReportActionStatus(ctx context.Context, in *WorkflowActionStatus, opts ...grpc.CallOption) (*empty.Empty, error)
}

type roverClient struct {
	cc *grpc.ClientConn
}

func NewRoverClient(cc *grpc.ClientConn) RoverClient {
	return &roverClient{cc}
}

func (c *roverClient) GetWorkflowContexts(ctx context.Context, in *WorkflowContextRequest, opts ...grpc.CallOption) (*WorkflowContextList, error) {
	out := new(WorkflowContextList)
	err := c.cc.Invoke(ctx, "/rover.Rover/GetWorkflowContexts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roverClient) GetWorkflowActions(ctx context.Context, in *WorkflowActionsRequest, opts ...grpc.CallOption) (*WorkflowActionList, error) {
	out := new(WorkflowActionList)
	err := c.cc.Invoke(ctx, "/rover.Rover/GetWorkflowActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roverClient) ReportActionStatus(ctx context.Context, in *WorkflowActionStatus, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rover.Rover/ReportActionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoverServer is the server API for Rover service.
type RoverServer interface {
	GetWorkflowContexts(context.Context, *WorkflowContextRequest) (*WorkflowContextList, error)
	GetWorkflowActions(context.Context, *WorkflowActionsRequest) (*WorkflowActionList, error)
	ReportActionStatus(context.Context, *WorkflowActionStatus) (*empty.Empty, error)
}

// UnimplementedRoverServer can be embedded to have forward compatible implementations.
type UnimplementedRoverServer struct {
}

func (*UnimplementedRoverServer) GetWorkflowContexts(ctx context.Context, req *WorkflowContextRequest) (*WorkflowContextList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowContexts not implemented")
}
func (*UnimplementedRoverServer) GetWorkflowActions(ctx context.Context, req *WorkflowActionsRequest) (*WorkflowActionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowActions not implemented")
}
func (*UnimplementedRoverServer) ReportActionStatus(ctx context.Context, req *WorkflowActionStatus) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportActionStatus not implemented")
}

func RegisterRoverServer(s *grpc.Server, srv RoverServer) {
	s.RegisterService(&_Rover_serviceDesc, srv)
}

func _Rover_GetWorkflowContexts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowContextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoverServer).GetWorkflowContexts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.Rover/GetWorkflowContexts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoverServer).GetWorkflowContexts(ctx, req.(*WorkflowContextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rover_GetWorkflowActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowActionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoverServer).GetWorkflowActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.Rover/GetWorkflowActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoverServer).GetWorkflowActions(ctx, req.(*WorkflowActionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rover_ReportActionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowActionStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoverServer).ReportActionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.Rover/ReportActionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoverServer).ReportActionStatus(ctx, req.(*WorkflowActionStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rover_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rover.Rover",
	HandlerType: (*RoverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWorkflowContexts",
			Handler:    _Rover_GetWorkflowContexts_Handler,
		},
		{
			MethodName: "GetWorkflowActions",
			Handler:    _Rover_GetWorkflowActions_Handler,
		},
		{
			MethodName: "ReportActionStatus",
			Handler:    _Rover_ReportActionStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rover.proto",
}
