// Code generated by protoc-gen-go. DO NOT EDIT.
// source: template/template.proto

package template

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_dca67df6b60706ce, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type WorkflowTemplate struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data                 string               `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WorkflowTemplate) Reset()         { *m = WorkflowTemplate{} }
func (m *WorkflowTemplate) String() string { return proto.CompactTextString(m) }
func (*WorkflowTemplate) ProtoMessage()    {}
func (*WorkflowTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_dca67df6b60706ce, []int{1}
}

func (m *WorkflowTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowTemplate.Unmarshal(m, b)
}
func (m *WorkflowTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowTemplate.Marshal(b, m, deterministic)
}
func (m *WorkflowTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowTemplate.Merge(m, src)
}
func (m *WorkflowTemplate) XXX_Size() int {
	return xxx_messageInfo_WorkflowTemplate.Size(m)
}
func (m *WorkflowTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowTemplate proto.InternalMessageInfo

func (m *WorkflowTemplate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WorkflowTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowTemplate) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *WorkflowTemplate) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *WorkflowTemplate) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *WorkflowTemplate) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type CreateResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dca67df6b60706ce, []int{2}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dca67df6b60706ce, []int{3}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "github.com.tinkerbell.tink.protos.template.Empty")
	proto.RegisterType((*WorkflowTemplate)(nil), "github.com.tinkerbell.tink.protos.template.WorkflowTemplate")
	proto.RegisterType((*CreateResponse)(nil), "github.com.tinkerbell.tink.protos.template.CreateResponse")
	proto.RegisterType((*GetRequest)(nil), "github.com.tinkerbell.tink.protos.template.GetRequest")
}

func init() { proto.RegisterFile("template/template.proto", fileDescriptor_dca67df6b60706ce) }

var fileDescriptor_dca67df6b60706ce = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xbf, 0x8e, 0xd3, 0x40,
	0x10, 0xc6, 0xb5, 0xe6, 0x2e, 0xdc, 0xed, 0x71, 0x3e, 0x58, 0x81, 0xce, 0xb2, 0xae, 0x88, 0x5c,
	0x9d, 0x52, 0xac, 0xb9, 0x20, 0x21, 0x14, 0xd1, 0xf0, 0x4f, 0x69, 0xa8, 0xac, 0x20, 0x24, 0xba,
	0x75, 0x3c, 0x09, 0xab, 0xd8, 0x5e, 0xe3, 0x1d, 0x83, 0x10, 0xa2, 0x80, 0x9a, 0x8e, 0x02, 0x51,
	0x51, 0xf0, 0x48, 0xbc, 0x02, 0x0f, 0x41, 0x89, 0xbc, 0x1b, 0x3b, 0x24, 0x20, 0x05, 0x2b, 0xd7,
	0x8d, 0x3e, 0x7f, 0x9f, 0xf7, 0x37, 0x33, 0xbb, 0xf4, 0x14, 0x21, 0x2b, 0x52, 0x81, 0x10, 0x36,
	0x05, 0x2f, 0x4a, 0x85, 0x8a, 0x0d, 0xe6, 0x12, 0x5f, 0x56, 0x31, 0x9f, 0xaa, 0x8c, 0xa3, 0xcc,
	0x17, 0x50, 0xc6, 0x90, 0xa6, 0xa6, 0xb4, 0x0e, 0xcd, 0x9b, 0x84, 0x7f, 0x36, 0x57, 0x6a, 0x9e,
	0x42, 0x28, 0x0a, 0x19, 0x8a, 0x3c, 0x57, 0x28, 0x50, 0xaa, 0x5c, 0x5b, 0x9f, 0x7f, 0x82, 0x32,
	0x03, 0x8d, 0x22, 0x2b, 0xac, 0x10, 0x5c, 0xa5, 0xfb, 0x4f, 0xb2, 0x02, 0xdf, 0x06, 0xbf, 0x08,
	0xbd, 0xfe, 0x5c, 0x95, 0x8b, 0x59, 0xaa, 0xde, 0x4c, 0x96, 0x3f, 0x63, 0x2e, 0x75, 0x64, 0xe2,
	0x91, 0x3e, 0x39, 0x3f, 0x8c, 0x1c, 0x99, 0x30, 0x46, 0xf7, 0x72, 0x91, 0x81, 0xe7, 0x18, 0xc5,
	0xd4, 0xb5, 0x96, 0x08, 0x14, 0xde, 0x15, 0xab, 0xd5, 0x35, 0xbb, 0x47, 0x0f, 0xa7, 0x25, 0x08,
	0x84, 0xe4, 0x01, 0x7a, 0x7b, 0x7d, 0x72, 0x7e, 0x34, 0xf4, 0xb9, 0x05, 0xb3, 0xe7, 0xc6, 0xd5,
	0x8c, 0x4f, 0x1a, 0x94, 0x68, 0x65, 0xae, 0x93, 0x55, 0x91, 0x2c, 0x93, 0xfb, 0xdb, 0x93, 0xad,
	0xb9, 0x4e, 0x26, 0x90, 0x82, 0x4d, 0xf6, 0xb6, 0x27, 0x5b, 0x73, 0xd0, 0xa7, 0xee, 0x23, 0x03,
	0x10, 0x81, 0x2e, 0x54, 0xae, 0xff, 0xea, 0x3b, 0x38, 0xa3, 0x74, 0x0c, 0x18, 0xc1, 0xab, 0x0a,
	0x34, 0x6e, 0x7e, 0x1d, 0x7e, 0xea, 0xd1, 0x83, 0x76, 0x64, 0xdf, 0x49, 0xf3, 0xb7, 0x56, 0xba,
	0xcf, 0xff, 0x7f, 0x7f, 0x7c, 0x73, 0x07, 0xfe, 0xa8, 0x4b, 0x7a, 0xbd, 0x8f, 0xe0, 0xf4, 0xe3,
	0x8f, 0x9f, 0x9f, 0x9d, 0x1b, 0xc1, 0xb5, 0xf0, 0xf5, 0x45, 0x7b, 0xa9, 0x46, 0x64, 0xc0, 0xbe,
	0x11, 0x7a, 0x34, 0x06, 0x6c, 0x11, 0xef, 0x76, 0x39, 0x64, 0x35, 0x0a, 0x7f, 0xa7, 0xd6, 0x02,
	0xdf, 0xe0, 0xdd, 0x64, 0xec, 0x4f, 0x3c, 0x1d, 0xbe, 0x93, 0xc9, 0x7b, 0xf6, 0x85, 0x50, 0xf7,
	0xb1, 0x59, 0xd1, 0xce, 0x90, 0x17, 0x5d, 0x72, 0xf6, 0x35, 0x2c, 0xc9, 0x06, 0xff, 0x22, 0xfb,
	0x4a, 0xe8, 0xf1, 0x53, 0xa9, 0xdb, 0xe1, 0x69, 0xd6, 0xfd, 0x80, 0x1d, 0x07, 0x77, 0xcb, 0xe0,
	0x9d, 0xb0, 0xe3, 0x35, 0xbc, 0xdb, 0x84, 0x7d, 0x20, 0xd4, 0x7d, 0x66, 0x9e, 0xc4, 0x25, 0xdd,
	0xbe, 0xee, 0xad, 0x3d, 0xa4, 0x2f, 0x0e, 0x1a, 0x25, 0xee, 0x19, 0xcb, 0x9d, 0xdf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xf0, 0x8c, 0x1d, 0x63, 0xdb, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TemplateClient is the client API for Template service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TemplateClient interface {
	CreateTemplate(ctx context.Context, in *WorkflowTemplate, opts ...grpc.CallOption) (*CreateResponse, error)
	GetTemplate(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	DeleteTemplate(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Empty, error)
	ListTemplates(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Template_ListTemplatesClient, error)
	UpdateTemplate(ctx context.Context, in *WorkflowTemplate, opts ...grpc.CallOption) (*Empty, error)
}

type templateClient struct {
	cc *grpc.ClientConn
}

func NewTemplateClient(cc *grpc.ClientConn) TemplateClient {
	return &templateClient{cc}
}

func (c *templateClient) CreateTemplate(ctx context.Context, in *WorkflowTemplate, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/github.com.tinkerbell.tink.protos.template.Template/CreateTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) GetTemplate(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/github.com.tinkerbell.tink.protos.template.Template/GetTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) DeleteTemplate(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/github.com.tinkerbell.tink.protos.template.Template/DeleteTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) ListTemplates(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Template_ListTemplatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Template_serviceDesc.Streams[0], "/github.com.tinkerbell.tink.protos.template.Template/ListTemplates", opts...)
	if err != nil {
		return nil, err
	}
	x := &templateListTemplatesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Template_ListTemplatesClient interface {
	Recv() (*WorkflowTemplate, error)
	grpc.ClientStream
}

type templateListTemplatesClient struct {
	grpc.ClientStream
}

func (x *templateListTemplatesClient) Recv() (*WorkflowTemplate, error) {
	m := new(WorkflowTemplate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *templateClient) UpdateTemplate(ctx context.Context, in *WorkflowTemplate, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/github.com.tinkerbell.tink.protos.template.Template/UpdateTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TemplateServer is the server API for Template service.
type TemplateServer interface {
	CreateTemplate(context.Context, *WorkflowTemplate) (*CreateResponse, error)
	GetTemplate(context.Context, *GetRequest) (*WorkflowTemplate, error)
	DeleteTemplate(context.Context, *GetRequest) (*Empty, error)
	ListTemplates(*Empty, Template_ListTemplatesServer) error
	UpdateTemplate(context.Context, *WorkflowTemplate) (*Empty, error)
}

// UnimplementedTemplateServer can be embedded to have forward compatible implementations.
type UnimplementedTemplateServer struct {
}

func (*UnimplementedTemplateServer) CreateTemplate(ctx context.Context, req *WorkflowTemplate) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTemplate not implemented")
}
func (*UnimplementedTemplateServer) GetTemplate(ctx context.Context, req *GetRequest) (*WorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTemplate not implemented")
}
func (*UnimplementedTemplateServer) DeleteTemplate(ctx context.Context, req *GetRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTemplate not implemented")
}
func (*UnimplementedTemplateServer) ListTemplates(req *Empty, srv Template_ListTemplatesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListTemplates not implemented")
}
func (*UnimplementedTemplateServer) UpdateTemplate(ctx context.Context, req *WorkflowTemplate) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTemplate not implemented")
}

func RegisterTemplateServer(s *grpc.Server, srv TemplateServer) {
	s.RegisterService(&_Template_serviceDesc, srv)
}

func _Template_CreateTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowTemplate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).CreateTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.tinkerbell.tink.protos.template.Template/CreateTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).CreateTemplate(ctx, req.(*WorkflowTemplate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_GetTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).GetTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.tinkerbell.tink.protos.template.Template/GetTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).GetTemplate(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_DeleteTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).DeleteTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.tinkerbell.tink.protos.template.Template/DeleteTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).DeleteTemplate(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_ListTemplates_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TemplateServer).ListTemplates(m, &templateListTemplatesServer{stream})
}

type Template_ListTemplatesServer interface {
	Send(*WorkflowTemplate) error
	grpc.ServerStream
}

type templateListTemplatesServer struct {
	grpc.ServerStream
}

func (x *templateListTemplatesServer) Send(m *WorkflowTemplate) error {
	return x.ServerStream.SendMsg(m)
}

func _Template_UpdateTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowTemplate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).UpdateTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.tinkerbell.tink.protos.template.Template/UpdateTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).UpdateTemplate(ctx, req.(*WorkflowTemplate))
	}
	return interceptor(ctx, in, info, handler)
}

var _Template_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.tinkerbell.tink.protos.template.Template",
	HandlerType: (*TemplateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTemplate",
			Handler:    _Template_CreateTemplate_Handler,
		},
		{
			MethodName: "GetTemplate",
			Handler:    _Template_GetTemplate_Handler,
		},
		{
			MethodName: "DeleteTemplate",
			Handler:    _Template_DeleteTemplate_Handler,
		},
		{
			MethodName: "UpdateTemplate",
			Handler:    _Template_UpdateTemplate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListTemplates",
			Handler:       _Template_ListTemplates_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "template/template.proto",
}
