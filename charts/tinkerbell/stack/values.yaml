stack:
  enabled: true
  name: tink-stack
  service:
    enabled: true
    type: LoadBalancer
  selector:
    app: tink-stack
  # &publicIP is a YAML anchor. It allows us to define a value once and reference it multiple times.
  # https://helm.sh/docs/chart_template_guide/yaml_techniques/#yaml-anchors
  loadBalancerIP: &publicIP 192.168.2.112
  lbClass: kube-vip.io/kube-vip-class
  # Once the Kubernetes Gateway API is more stable, we will use that for all services instead of nginx.
  image: nginx:1.25.1
  hook:
    enabled: true
    name: hook-files
    port: 8080
    image: bash
    downloadsDest: /opt/hook
    # downloadURL only works with the > 0.8.1 Hook release.
    # This is because previous Hook versions didn't provide a checksum file.
    downloadURL: https://github.com/tinkerbell/hook/releases/download/latest
  kubevip:
    enabled: true
    name: kube-vip
    image: ghcr.io/kube-vip/kube-vip:v0.5.12
    imagePullPolicy: IfNotPresent
    roleName: kube-vip-role
    roleBindingName: kube-vip-rolebinding
    # Customize the interface KubeVIP advertises on. When unset, KubeVIP will autodetect the
    # interface.
    #interface: enp0s8
  relay: # relay allows us to listen and respond to layer broadcast DHCP requests
    name: dhcp-relay
    enabled: true
    # This image (ghcr.io/jacobweinstock/dhcrelay) is used because the other public dhcprelay images out there (`modem7/dhcprelay`)
    # doesn't respect signals properly when run as PID 1.
    image: ghcr.io/jacobweinstock/dhcrelay
    maxHopCount: 10
    # sourceInterface is the Host/Node interface to use for listening for DHCP broadcast packets.
    # When unset, the interface from the default route will be used.
    # sourceInterface: eno1

# -- Overrides
# The values defined here override those in the individual charts. Some of them require tweaking
# before deployment as they are environment dependent; others are surfaced for convenience.
#
# See individual chart documentation for additional detail.

boots:
  image: quay.io/tinkerbell/boots:v0.9.0
  tinkWorkerImage: quay.io/tinkerbell/tink-worker:v0.9.0
  trustedProxies: []
  # This will be the IP address that machines use to reach Boots (via unicast for DHCP and for tftp/http of ipxe binaries/scripts) for netbooting.
  # It should be a unused IP address in your network.
  # Once the Kubernetes Gateway API and an implementation is available that can implements HTTP(S), UDP, GRPC, and transparent proxying, we will use that
  # and be able to require only a single IP for all Tinkerbell services.
  remoteIp: 192.168.2.113
  tinkServer:
    # This should be the same as `stack.loadBalancerIP`.
    ip: *publicIP
  osieBase:
    # This should be the same as `stack.loadBalancerIP`.
    ip: *publicIP

hegel:
  image: quay.io/tinkerbell/hegel:v0.11.0
  trustedProxies: []

rufio:
  image: quay.io/tinkerbell/rufio:v0.3.1

tink:
  controller:
    image: quay.io/tinkerbell/tink-controller:v0.9.0
  server:
    image: quay.io/tinkerbell/tink:v0.9.0
