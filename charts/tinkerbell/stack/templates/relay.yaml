{{- if and .Values.stack.enabled .Values.stack.relay.enabled -}}
{{- $sourceInterface := ( required "sourceInterface must be specified" .Values.stack.relay.sourceInterface ) }}
{{- $macvlanInterfaceName := printf "%s%s" "macvlan" (randNumeric 2) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.stack.name}}-relay
  namespace: {{ .Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.stack.relay.name }}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.stack.relay.name }}
    spec:
      containers:
      - name: {{ .Values.stack.relay.name }}
        image: {{ .Values.stack.relay.image }}
        args: ["-m", "append", "-c", "{{ .Values.stack.relay.maxHopCount }}", "-id", "{{ $macvlanInterfaceName }}", "-iu", "eth0", "-U", "eth0", "boots.{{ .Release.Namespace }}.svc.cluster.local."]
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
              - NET_RAW
      hostPID: true
      initContainers:
      - command:
          - /bin/sh
          - -c
          - |
            # This script allows us to listen and respond to DHCP requests on a host network interface and interact with Boots properly.
            # This is used instead of `hostNetwork: true` because the dhcp relay requires clear paths for listening for broadcast traffic
            # and sending/receiving unicast traffic to/from Boots.
            set -xe
            # Create a macvlan interface. TODO: If this fails, try again with a different name?
            nsenter -t1 -n ip link add {{ $macvlanInterfaceName }} link {{ $sourceInterface }} type macvlan mode bridge
            # Move the interface into the POD.
            pid=$(echo $$)
            nsenter -t1 -n ip link set {{ $macvlanInterfaceName }} netns ${pid} || nsenter -t1 -n ip link delete {{ $macvlanInterfaceName }}
            # Set the macvlan interface up
            ip link set {{ $macvlanInterfaceName }} up
            # Set the IP address
            ip addr add {{ .Values.stack.loadBalancerIP }}/32 dev {{ $macvlanInterfaceName }} noprefixroute
        image: alpine
        name: macvlan-interface
        securityContext:
          privileged: true
{{- end }}