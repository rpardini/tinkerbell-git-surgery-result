{{- if .Values.stack.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.stack.name}}
  namespace: {{ .Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      {{- with .Values.stack.selector }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/nginx-configmap.yaml") . | sha256sum }}
      labels:
        {{- with .Values.stack.selector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if not .Values.stack.service.enabled }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
      - name: {{ .Values.stack.name }}
        image: {{ .Values.stack.image }}
        command: ["/bin/bash", "-xeuc"]
        args:
        - |
          POD_NAMESERVER=$(awk 'NR==2 {print $2}' /etc/resolv.conf) \
            envsubst '$POD_NAMESERVER' \
            </tmp/nginx.conf.template \
            >/etc/nginx/nginx.conf
          exec nginx -g 'daemon off;'
        ports:
        - containerPort: {{ .Values.hegel.deployment.port }}
          protocol: TCP
          name: {{ .Values.hegel.deployment.portName }}
        - containerPort: {{ .Values.tink.server.deployment.port }}
          protocol: TCP
          name: {{ .Values.tink.server.deployment.portName }}
        - containerPort: {{ .Values.stack.hook.port }}
          protocol: TCP
          name: hook-http
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts:
        {{- if .Values.stack.hook.enabled }}
        - mountPath: /usr/share/nginx/html
          name: hook-artifacts
        {{- end }}
        - mountPath: /tmp
          readOnly: true
          name: nginx-conf
      {{- if .Values.stack.hook.enabled }}
      initContainers:
      - name: init-hook-download
        image: {{ .Values.stack.hook.image }}
        command: ["/bin/bash", "-xeuc"]
        args:
        - |
          apt-get update
          apt-get install -y wget
          cd /usr/share/nginx/html
          {{- range $index, $keys := .Values.stack.hook.downloads }}
          wget -O /tmp/hook{{ $index }}.tar.gz {{ $keys.url }}
          tar -zxvf /tmp/hook{{ $index }}.tar.gz
          rm /tmp/hook{{ $index }}.tar.gz
          {{- end }}
          cat >checksums.txt <<'EOF'
          {{- range $index, $keys := .Values.stack.hook.downloads }}
          {{ $keys.sha512sum.kernel }}
          {{ $keys.sha512sum.initramfs }}
          {{- end }}
          EOF
          sha512sum --check checksums.txt
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: hook-artifacts
      {{- end }}
      volumes:
      {{- if .Values.stack.hook.enabled }}
      - name: hook-artifacts
        hostPath:
          path: /opt/hook
          type: DirectoryOrCreate
      {{- end }}
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf.template
{{- if .Values.stack.service.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ .Values.stack.name }}
  name: {{ .Values.stack.name }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  type: {{ .Values.stack.service.type }}
  {{- if eq .Values.stack.service.type "LoadBalancer" }}
  {{- if .Values.stack.lbClass }}
  loadBalancerClass: {{ .Values.stack.lbClass }}
  {{- end }}
  loadBalancerIP: {{ .Values.stack.loadBalancerIP }}
  {{- end }}
  externalTrafficPolicy: Local
  ports:
  - name: {{ .Values.hegel.name }}
    port: {{ .Values.hegel.deployment.port }}
    protocol: TCP
  - name: {{ .Values.tink.server.name }}
    port: {{ .Values.tink.server.deployment.port }}
    protocol: TCP
  - name: {{ .Values.stack.hook.name }}
    port: {{ .Values.stack.hook.port }}
    protocol: TCP
  selector:
    {{- with .Values.stack.selector }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
{{- end }}
{{- end }}
